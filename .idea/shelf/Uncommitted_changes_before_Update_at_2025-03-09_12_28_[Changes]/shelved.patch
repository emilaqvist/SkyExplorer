Index: src/controller/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport io.javalin.Javalin;\r\nimport misc.Configurator;\r\n\r\npublic class App {\r\n    public static void main(String[] args) {\r\n        Javalin app = Javalin.create(javalinConfig -> {\r\n\r\n        }).start(7000);\r\n\r\n        app.before(ctx -> {\r\n            ctx.header(\"Access-Control-Allow-Origin\", \"*\");\r\n            ctx.header(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\r\n            ctx.header(\"Access-Control-Allow-Headers\", \"Content-Type, x-rapidapi-key, x-rapidapi-host\");\r\n        });\r\n\r\n        String apiKey = Configurator.getProperty(\"FLIGHT_API_KEY\");\r\n        WeatherController.registerRoutes(app);\r\n        SearchController.registerRoutes(app,apiKey);\r\n\r\n\r\n        System.out.println(\"Server igång lyssnar på port 7000\");\r\n        System.out.println(\"good\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controller/App.java b/src/controller/App.java
--- a/src/controller/App.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/controller/App.java	(date 1741518717895)
@@ -3,7 +3,14 @@
 import io.javalin.Javalin;
 import misc.Configurator;
 
+/**
+ *
+ */
 public class App {
+    /**
+     *
+     * @param args
+     */
     public static void main(String[] args) {
         Javalin app = Javalin.create(javalinConfig -> {
 
@@ -16,7 +23,6 @@
         });
 
         String apiKey = Configurator.getProperty("FLIGHT_API_KEY");
-        WeatherController.registerRoutes(app);
         SearchController.registerRoutes(app,apiKey);
 
 
Index: src/controller/SearchController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport com.google.gson.Gson;\r\nimport io.javalin.Javalin;\r\nimport service.*;\r\nimport service.dto.Attraction;\r\nimport service.dto.FlightSearchRequest;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\n/**\r\n * @author Emil\r\n * @author Mahyar\r\n *\r\n *\r\n **/\r\npublic class SearchController {\r\n    private static FlightService flightService;\r\n    private static WeatherService weatherService;\r\n    private static final Gson gson = new Gson();\r\n\r\n    public static void registerRoutes(Javalin app, String rapidApiKey){\r\n\r\n        flightService = new FlightService(rapidApiKey);\r\n        weatherService = new WeatherService();\r\n\r\n        app.get(\"/search\", context -> {\r\n            String from = context.queryParam(\"from\");\r\n            String destination = context.queryParam(\"destination\");\r\n            String departDate = context.queryParam(\"departDate\");\r\n            String returnDate = context.queryParam(\"returnDate\");\r\n\r\n            Map<String, String> errors = new HashMap<>();\r\n            if (from == null || from.isEmpty()) {\r\n                errors.put(\"from\", \"Avreseplats måste anges\");\r\n            }\r\n\r\n            if (destination == null || destination.isEmpty()) {\r\n                errors.put(\"destination\", \"Destination måste anges\");\r\n            }\r\n\r\n            if (departDate == null || departDate.isEmpty()) {\r\n                errors.put(\"departDate\", \"Avresedatum måste anges\");\r\n            }\r\n\r\n            if (!errors.isEmpty()) {\r\n                Map<String, Object> errorResponse = new HashMap<>();\r\n                errorResponse.put(\"error\", \"Saknar obligatoriska parametrar\");\r\n                errorResponse.put(\"details\", errors);\r\n\r\n                context.status(400).result(gson.toJson(errorResponse));\r\n                return;\r\n            }\r\n            // Använd LocationMapper för att översätta platsnamn till flight, eftersom API vill ha forkortningar för flyggplatser\r\n            String fromFlightId = LocationMapper.getFlightId(from);\r\n            String destinationFlightId = LocationMapper.getFlightId(destination);\r\n\r\n            FlightSearchRequest request = new FlightSearchRequest(fromFlightId,destinationFlightId,departDate);\r\n\r\n            try{\r\n                var flights = flightService.searchFlights(request);\r\n                String weatherJson = weatherService.getWeatherData(destination);\r\n\r\n                //Kombinera\r\n\r\n                Map<String,Object> combined = new HashMap<>();\r\n                combined.put(\"flights\",flights);\r\n                combined.put(\"weather\",gson.fromJson(weatherJson,Object.class));\r\n\r\n                //Returnera ihopslagna\r\n                context.result(gson.toJson(combined));\r\n            } catch (FlightSearchException e) {\r\n                System.err.println(\"Raw flight API response: \" + flightService.getRawResponse());\r\n                Map<String, String> errorResponse = new HashMap<>();\r\n                errorResponse.put(\"error\", e.getMessage());\r\n                context.status(e.getHttpStatus()).result(gson.toJson(errorResponse));\r\n            }\r\n        });\r\n\r\n        app.get(\"/attractions\", context -> {\r\n            String city = context.queryParam(\"city\");\r\n\r\n            if (city == null || city.isEmpty()) {\r\n                Map<String, String> errorResponse = new HashMap<>();\r\n                errorResponse.put(\"error\", \"Stad måste anges\");\r\n                context.status(400).result(gson.toJson(errorResponse));\r\n                return;\r\n            }\r\n\r\n            try {\r\n                AttractionService attractionService = new AttractionService();\r\n                List<Attraction> attractions = attractionService.getAttractionsForCity(city);\r\n                context.result(gson.toJson(attractions));\r\n            } catch (Exception e) {\r\n                Map<String, String> errorResponse = new HashMap<>();\r\n                errorResponse.put(\"error\", \"Fel vid hämtning av attraktioner: \" + e.getMessage());\r\n                context.status(500).result(gson.toJson(errorResponse));\r\n            }\r\n        });\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controller/SearchController.java b/src/controller/SearchController.java
--- a/src/controller/SearchController.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/controller/SearchController.java	(date 1741518937796)
@@ -3,8 +3,8 @@
 import com.google.gson.Gson;
 import io.javalin.Javalin;
 import service.*;
-import service.dto.Attraction;
-import service.dto.FlightSearchRequest;
+import model.dto.Attraction;
+import model.dto.FlightSearchRequest;
 
 import java.util.HashMap;
 import java.util.List;
@@ -21,6 +21,11 @@
     private static WeatherService weatherService;
     private static final Gson gson = new Gson();
 
+    /**
+     *
+     * @param app
+     * @param rapidApiKey
+     */
     public static void registerRoutes(Javalin app, String rapidApiKey){
 
         flightService = new FlightService(rapidApiKey);
Index: src/service/dto/Attraction.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/Attraction.java b/src/model/dto/Attraction.java
rename from src/service/dto/Attraction.java
rename to src/model/dto/Attraction.java
--- a/src/service/dto/Attraction.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/Attraction.java	(date 1741519724496)
@@ -1,5 +1,8 @@
-package service.dto;
+package model.dto;
 
+/**
+ * Representerar en attraction med detaljerad information via alla parametrar
+ */
 public class Attraction {
     private String xid;
     private String name;
Index: src/service/AttractionService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package service;\r\n\r\nimport com.google.gson.JsonArray;\r\nimport com.google.gson.JsonElement;\r\nimport com.google.gson.JsonObject;\r\nimport com.google.gson.JsonParser;\r\nimport misc.Configurator;\r\nimport service.dto.Attraction;\r\n\r\nimport java.net.URI;\r\nimport java.net.URLEncoder;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.nio.charset.StandardCharsets;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class AttractionService {\r\n\r\n\r\n\r\n    private final HttpClient httpClient;\r\n    private final String apiHost;\r\n    private final String baseUrl;\r\n    private final String apiKey;\r\n\r\n    public AttractionService() {\r\n        this.httpClient = HttpClient.newHttpClient();\r\n        this.apiKey = Configurator.getProperty(\"ATTRACTION_PLACES\");\r\n        this.apiHost = \"opentripmap-places-v1.p.rapidapi.com\";\r\n        this.baseUrl = \"https://opentripmap-places-v1.p.rapidapi.com/en/places\";\r\n    }\r\n\r\n    public List<Attraction> getAttractionsForCity(String city) throws Exception {\r\n        // hämta koordinates för att hämta attractions, asså places\r\n        double[] coordinates = getCoordinates(city);\r\n\r\n        // använder koordinates för att hämta platcer\r\n        List<Attraction> attractions = getPlacesNearby(coordinates[0], coordinates[1], 100000, 40);\r\n\r\n        // hämtar detaljer om platsen\r\n        for (Attraction attraction : attractions) {\r\n            getPlaceDetails(attraction);\r\n        }\r\n\r\n        return attractions;\r\n    }\r\n\r\n    private double[] getCoordinates(String city) throws Exception {\r\n        // Koda stadsnamnet för URL\r\n        String encodedCity = URLEncoder.encode(city, StandardCharsets.UTF_8);\r\n\r\n        // Bygg URL för att hämta koordinater, det här var för att kunna skriva namnet på staden till API\r\n        String url = baseUrl + \"/geoname?name=\" + encodedCity;\r\n\r\n        // Skapa HTTP-request\r\n        HttpRequest request = HttpRequest.newBuilder()\r\n                .uri(URI.create(url))\r\n                .header(\"x-rapidapi-key\", apiKey)\r\n                .header(\"x-rapidapi-host\", apiHost)\r\n                .GET()\r\n                .build();\r\n\r\n        // Skicka request och ta emot svar\r\n        HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\r\n\r\n        if (response.statusCode() != 200) {\r\n            throw new Exception(\"Fel vid hämtning av koordinater. Statuskod: \" + response.statusCode());\r\n        }\r\n\r\n        JsonObject rootObject = JsonParser.parseString(response.body()).getAsJsonObject();\r\n\r\n        // Extrahera lat och lon, dvs latitud och longitud från JSON svaret, de används för att ge exakt position på jorden, kordinates helt enkelt\r\n        double lat = rootObject.get(\"lat\").getAsDouble();\r\n        double lon = rootObject.get(\"lon\").getAsDouble();\r\n\r\n\r\n        //returnerar de som en array\r\n        return new double[] { lat, lon };\r\n    }\r\n\r\n    private List<Attraction> getPlacesNearby(double lat, double lon, int radius, int limit) throws Exception {\r\n        // Bygg URL för att hämta platser i närheten, fick använda US locale allt annat blev fel\r\n        String url = String.format(Locale.US,\r\n                \"%s/radius?radius=%d&lon=%.6f&lat=%.6f&rate=2&format=json&limit=%d\",\r\n                baseUrl, radius, lon, lat, limit\r\n        );\r\n\r\n        // Skapa HTTP-request\r\n        HttpRequest request = HttpRequest.newBuilder()\r\n                .uri(URI.create(url))\r\n                .header(\"x-rapidapi-key\", apiKey)\r\n                .header(\"x-rapidapi-host\", apiHost)\r\n                .GET()\r\n                .build();\r\n\r\n        // Skicka request och ta emot svar\r\n        HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\r\n\r\n        if (response.statusCode() != 200) {\r\n            throw new Exception(\"Fel vid hämtning av platser. Statuskod: \" + response.statusCode());\r\n        }\r\n\r\n        // Gson\r\n        JsonArray placesArray = JsonParser.parseString(response.body()).getAsJsonArray();\r\n\r\n        // Här skapas lista med platser\r\n        List<Attraction> attractions = new ArrayList<>();\r\n\r\n        for (JsonElement placeElement : placesArray) {\r\n            JsonObject placeObject = placeElement.getAsJsonObject();\r\n\r\n            Attraction attraction = new Attraction();\r\n            attraction.setXid(placeObject.get(\"xid\").getAsString());\r\n            attraction.setName(placeObject.get(\"name\").getAsString());\r\n            attraction.setKinds(placeObject.get(\"kinds\").getAsString());\r\n\r\n            // Filtrera bort platser, annars var det mycket mer onödiga platser\r\n            if (isInterestingPlace(attraction.getKinds())) {\r\n                attractions.add(attraction);\r\n            }\r\n        }\r\n\r\n        return attractions;\r\n    }\r\n\r\n    private boolean isInterestingPlace(String kinds) {\r\n        // Filtrera platser,  man kan filtrera mer om man vill genom att ta bort kategorierna\r\n        String[] interestingCategories = {\r\n                \"museums\", \"historic\", \"cultural\", \"architecture\", \"tourist_facilities\",\r\n                \"monuments\", \"castles\", \"churches\", \"theatres\", \"gardens\", \"natural\",\r\n                \"amusements\", \"interesting_places\", \"bridges\"\r\n        };\r\n\r\n        for (String category : interestingCategories) {\r\n            if (kinds.contains(category)) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private void getPlaceDetails(Attraction attraction) throws Exception {\r\n        // Bygg URL för att hämta detaljer om en plats\r\n        String url = baseUrl + \"/xid/\" + attraction.getXid();\r\n\r\n        // Skapa HTTP-request\r\n        HttpRequest request = HttpRequest.newBuilder()\r\n                .uri(URI.create(url))\r\n                .header(\"x-rapidapi-key\", apiKey)\r\n                .header(\"x-rapidapi-host\", apiHost)\r\n                .GET()\r\n                .build();\r\n\r\n        // Skicka request och ta emot svar\r\n        HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\r\n\r\n\r\n        if (response.statusCode() != 200) {\r\n            return;\r\n        }\r\n\r\n        // Tolka JSON svar med Gson\r\n        JsonObject rootObject = JsonParser.parseString(response.body()).getAsJsonObject();\r\n\r\n        // Uppdatera attraction objektet med detaljerad information, om JSON svaret har wikioedia extracts asså text så skrivs det\r\n        if (rootObject.has(\"wikipedia_extracts\") && rootObject.getAsJsonObject(\"wikipedia_extracts\").has(\"text\")) {\r\n            attraction.setDescription(rootObject.getAsJsonObject(\"wikipedia_extracts\").get(\"text\").getAsString());\r\n        }\r\n\r\n        //den kollar på om den har en bild, om det finns en bild så hämtas den från source\r\n        if (rootObject.has(\"preview\") && rootObject.getAsJsonObject(\"preview\").has(\"source\")) {\r\n            attraction.setImageUrl(rootObject.getAsJsonObject(\"preview\").get(\"source\").getAsString());\r\n        }\r\n\r\n        //koordinates som behövdes också spara för att visa den på kartan\r\n        if (rootObject.has(\"point\")) {\r\n            JsonObject point = rootObject.getAsJsonObject(\"point\");\r\n            attraction.setLatitude(point.get(\"lat\").getAsDouble());\r\n            attraction.setLongitude(point.get(\"lon\").getAsDouble());\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/AttractionService.java b/src/service/AttractionService.java
--- a/src/service/AttractionService.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/service/AttractionService.java	(date 1741518938176)
@@ -5,7 +5,7 @@
 import com.google.gson.JsonObject;
 import com.google.gson.JsonParser;
 import misc.Configurator;
-import service.dto.Attraction;
+import model.dto.Attraction;
 
 import java.net.URI;
 import java.net.URLEncoder;
Index: src/service/dto/Airline.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/Airline.java b/src/model/dto/Airline.java
rename from src/service/dto/Airline.java
rename to src/model/dto/Airline.java
--- a/src/service/dto/Airline.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/Airline.java	(date 1741518938268)
@@ -1,4 +1,4 @@
-package service.dto;
+package model.dto;
 
 
 
Index: src/service/dto/Carriers.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/Carriers.java b/src/model/dto/Carriers.java
rename from src/service/dto/Carriers.java
rename to src/model/dto/Carriers.java
--- a/src/service/dto/Carriers.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/Carriers.java	(date 1741518937933)
@@ -1,6 +1,6 @@
-package service.dto;
-
-
+package model.dto;
+/*
+*/
 import java.util.List;
 
 /**
Index: src/service/dto/Airport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/Airport.java b/src/model/dto/Airport.java
rename from src/service/dto/Airport.java
rename to src/model/dto/Airport.java
--- a/src/service/dto/Airport.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/Airport.java	(date 1741518938221)
@@ -1,4 +1,4 @@
-package service.dto;
+package model.dto;
 
 
 /**
Index: src/service/FlightService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package service;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.google.gson.GsonBuilder;\r\nimport service.dto.*;\r\nimport java.net.URI;\r\nimport java.net.http.HttpClient;\r\nimport java.net.http.HttpRequest;\r\nimport java.net.http.HttpResponse;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\n\r\npublic class FlightService {\r\n    private final String apiKey;\r\n    private final HttpClient httpClient;\r\n    private final Gson gson;\r\n\r\n    private String rawResponse;\r\n    private static final String API_URL = \"https://sky-scanner3.p.rapidapi.com/flights/search-multi-city\";\r\n    private static final int MAX_RESULTS = 10;\r\n\r\n    public FlightService(String apiKey) {\r\n        this.apiKey = apiKey;\r\n        this.httpClient = HttpClient.newHttpClient();\r\n        this.gson = new GsonBuilder().setPrettyPrinting().create(); // Gson\r\n    }\r\n\r\n\r\n    /**\r\n     * Searches for flights based on the given search request parameters.\r\n     *\r\n     * @param searchRequest the flight search request containing user-specified search criteria.\r\n     * @return a list of flight results limited to MAX_RESULTS.\r\n     * @throws FlightSearchException if an error occurs while searching for flights.\r\n     * @author Mahyar\r\n     */\r\n    public List<FlightResult> searchFlights(FlightSearchRequest searchRequest) throws FlightSearchException {\r\n        try {\r\n\r\n            if (searchRequest == null) {\r\n                throw new FlightSearchException(\"Sökförfrågan kan inte vara null\", 400); // Bad Request\r\n            }\r\n\r\n            if (searchRequest.getFromLocation() == null || searchRequest.getToLocation() == null) {\r\n                throw new FlightSearchException(\"Avrese- och destinationsplats måste anges\", 400); // Bad Request\r\n            }\r\n            String jsonBody = createRequestBody(searchRequest);\r\n            HttpRequest request = buildHttpRequest(jsonBody);\r\n            HttpResponse<String> response = httpClient.send(request, HttpResponse.BodyHandlers.ofString());\r\n\r\n            this.rawResponse = response.body();\r\n\r\n            if (response.statusCode() == 200) {\r\n                try {\r\n                    return parseAndLimitFlightResponse(response.body());\r\n                }catch (NullPointerException e) {\r\n\r\n                        throw new FlightSearchException(\"Inga flygdata hittades för den angivna rutten. Kontrollera stadsnamnen.\", 404);\r\n                }\r\n\r\n            } else if (response.statusCode() == 400) {\r\n                throw new FlightSearchException(\"Ogiltig förfrågan till flygAPI: \" , 400); // Bad Request\r\n            } else if (response.statusCode() == 404) {\r\n                throw new FlightSearchException(\"Flygresursen kunde inte hittas: \" , 404); // Not Found\r\n            } else {\r\n                throw new FlightSearchException(\"Fel vid sökning av flyg. Statuskod: \" , 500); // Server Error\r\n            }\r\n        } catch (FlightSearchException e) {\r\n            throw e;\r\n        } catch (Exception e) {\r\n            throw new FlightSearchException(\"Fel vid sökning av flyg: \" + e.getMessage(), e, 500); // Server Error\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Builds an HTTP request for searching flights.\r\n     *\r\n     * @param jsonBody the request body in JSON format.\r\n     * @return the constructed HttpRequest.\r\n     * @author Mahyar\r\n     */\r\n    private HttpRequest buildHttpRequest(String jsonBody) {\r\n        return HttpRequest.newBuilder()\r\n                .uri(URI.create(API_URL))\r\n                .header(\"Content-Type\", \"application/json\")\r\n                .header(\"x-rapidapi-host\", \"sky-scanner3.p.rapidapi.com\")\r\n                .header(\"x-rapidapi-key\", apiKey)\r\n                .POST(HttpRequest.BodyPublishers.ofString(jsonBody))\r\n                .build();\r\n    }\r\n\r\n\r\n    /**\r\n     * Creates the JSON request body for the flight search request.\r\n     *\r\n     * @param searchRequest the search request parameters.\r\n     * @return the request body as a JSON string.\r\n     * @author Mahyar\r\n     */\r\n    private String createRequestBody(FlightSearchRequest searchRequest) {\r\n        Map<String, Object> requestMap = Map.of(\r\n                \"market\", \"US\",\r\n                \"locale\", \"en-US\",\r\n                \"currency\", searchRequest.getCurrency(),\r\n                \"adults\", searchRequest.getAdults(),\r\n                \"children\", searchRequest.getChildren(),\r\n                \"infants\", searchRequest.getInfants(),\r\n                \"cabinClass\", searchRequest.getCabinClass(),\r\n                \"stops\", searchRequest.getStops(),\r\n                \"sort\", \"cheapest_first\",\r\n                \"flights\", List.of(Map.of(\r\n                        \"fromEntityId\", searchRequest.getFromLocation(),\r\n                        \"toEntityId\", searchRequest.getToLocation(),\r\n                        \"departDate\", searchRequest.getDepartDate()\r\n                ))\r\n        );\r\n\r\n        return gson.toJson(requestMap); //Gson\r\n    }\r\n\r\n\r\n    /**\r\n     * Parses the API response and limits the results to a maximum number.\r\n     *\r\n     * @param responseBody the JSON response from the API.\r\n     * @return a list of parsed and limited flight results.\r\n     * @author Mahyar\r\n     */\r\n    private List<FlightResult> parseAndLimitFlightResponse(String responseBody) {\r\n        FlightResponse flightResponse = gson.fromJson(responseBody, FlightResponse.class); // Konvertera JSON till objekt\r\n        return flightResponse.getData().getItineraries().stream()\r\n                .limit(MAX_RESULTS)\r\n                .map(this::convertToFlightResult)\r\n                .collect(Collectors.toList());\r\n    }\r\n\r\n    //fanns för att testa raw respons\r\n    public String getRawResponse() {\r\n        return rawResponse;\r\n    }\r\n\r\n\r\n    /**\r\n     * Converts an Itinerary object to a FlightResult object.\r\n     *\r\n     * @param itinerary the itinerary to convert.\r\n     * @return a FlightResult object containing structured flight details.\r\n     * @Mahyar\r\n     */\r\n    private FlightResult convertToFlightResult(Itinerary itinerary) {\r\n        Leg leg = itinerary.getLegs().get(0);\r\n\r\n        return FlightResult.builder()\r\n\r\n                .price(itinerary.getPrice().getRaw())\r\n                .formattedPrice(itinerary.getPrice().getFormatted())\r\n                .departureCity(leg.getOrigin().getCity())\r\n                .arrivalAirport(leg.getDestination().getName())\r\n                .departureAirport(leg.getOrigin().getName())\r\n                .arrivalCity(leg.getDestination().getCity())\r\n                .departureTime(leg.getDeparture())\r\n                .arrivalTime(leg.getArrival())\r\n                .duration(leg.getDurationInMinutes())\r\n                .stops(leg.getStopCount())\r\n                .airline(leg.getCarriers().getMarketing().get(0).getName())\r\n                .build();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/FlightService.java b/src/service/FlightService.java
--- a/src/service/FlightService.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/service/FlightService.java	(date 1741518893105)
@@ -2,7 +2,7 @@
 
 import com.google.gson.Gson;
 import com.google.gson.GsonBuilder;
-import service.dto.*;
+import model.dto.*;
 import java.net.URI;
 import java.net.http.HttpClient;
 import java.net.http.HttpRequest;
Index: src/service/WeatherService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package service;\r\n\r\n\r\nimport misc.Configurator;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.URL;\r\nimport java.net.URLEncoder;\r\nimport java.nio.charset.StandardCharsets;\r\n\r\npublic class WeatherService {\r\n\r\n    private static final String API_NYCKEL = Configurator.getProperty(\"TOMOROW_API_KEY\");\r\n    private static final String URL_BASE = \"https://api.tomorrow.io/v4/weather/forecast\";\r\n    public String getWeatherData(String location) {\r\n\r\n        try{\r\n            if (API_NYCKEL == null || API_NYCKEL.isEmpty()){\r\n                return \"{\\\"error\\\": \\\"API-nyckel saknas. Kontrollera att den är satt i application.properties.\\\"}\";\r\n            }\r\n\r\n            String encodedLocation = URLEncoder.encode(location.trim(), StandardCharsets.UTF_8.toString());\r\n            String encodeFields = URLEncoder.encode(\"temperature,nederbordTyp\",StandardCharsets.UTF_8.toString());\r\n\r\n            String timeStepsValue = \"1h\";\r\n            String urlString = URL_BASE + \"?location=\" + encodedLocation\r\n                    + \"&fields=\" + encodeFields\r\n                    + \"&timesteps=\" + timeStepsValue\r\n                    + \"&units=metric\"\r\n                    + \"&apikey=\" + API_NYCKEL;\r\n\r\n            System.out.println(\"Färdigställd URL: \" + urlString);\r\n\r\n            URL url = new URL(urlString);\r\n            HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n            connection.setRequestMethod(\"GET\");\r\n\r\n            int responseCode = connection.getResponseCode();\r\n            if(responseCode == HttpURLConnection.HTTP_OK){\r\n                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(connection.getInputStream()));\r\n                StringBuilder response = new StringBuilder();\r\n                String inputLine;\r\n                while ((inputLine = bufferedReader.readLine()) != null){\r\n                    response.append(inputLine);\r\n                }\r\n                bufferedReader.close();\r\n                return response.toString();\r\n            }else {\r\n                return \"{\\\"error\\\":\\\"GET request failade och returnerade http status: \" + responseCode + \"\\\"}\";\r\n            }\r\n\r\n\r\n\r\n        }catch (Exception e){\r\n            e.printStackTrace();\r\n            return \"{\\\"error\\\": \\\"Exception i VäderDatan: \" + e.getMessage() + \"\\\"}\";\r\n        }\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/WeatherService.java b/src/service/WeatherService.java
--- a/src/service/WeatherService.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/service/WeatherService.java	(date 1741517953912)
@@ -10,10 +10,20 @@
 import java.net.URLEncoder;
 import java.nio.charset.StandardCharsets;
 
+/**
+ * Service klass för att hämta väderdata från Tomorow.io's API.
+ * @author Emil
+ */
 public class WeatherService {
 
-    private static final String API_NYCKEL = Configurator.getProperty("TOMOROW_API_KEY");
+    private static final String API_NYCKEL = Configurator.getProperty("TOMOROW_API_KEY"); //Gömd nyckel måste hämtas via konfiguratorn
     private static final String URL_BASE = "https://api.tomorrow.io/v4/weather/forecast";
+
+    /**
+     * Denna metod hämtar väderdata för en inputtad plats.
+     * @param location Platsen (Stad) där väderdatan skall hämtas (det stället vi vill få info om)
+     * @return En JSON sträng med väderdata, alt felmeddelande om något har gått fel.
+     */
     public String getWeatherData(String location) {
 
         try{
Index: src/misc/Configurator.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package misc;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.Properties;\r\n\r\npublic class Configurator {\r\n    private static final Properties properties = new Properties();\r\n\r\n    static{\r\n        try(InputStream inputStream = Configurator.class.getClassLoader().getResourceAsStream(\"application.properties\")){\r\n            if (inputStream == null){\r\n\r\n                System.err.println(\"application.properties filen kunde ej hittas!\");\r\n\r\n                System.err.println(\"appliction.properties filen kunde ej hittas\");\r\n\r\n            }else {\r\n                properties.load(inputStream);\r\n            }\r\n        }catch (IOException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n    public static String getProperty(String key){\r\n        return properties.getProperty(key);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/misc/Configurator.java b/src/misc/Configurator.java
--- a/src/misc/Configurator.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/misc/Configurator.java	(date 1741519417540)
@@ -4,9 +4,14 @@
 import java.io.InputStream;
 import java.util.Properties;
 
+/**
+ * Konfigurationsklass för att läsa in vår propertiesklass där vi lagrar våra topphemliga API nycklar.
+ * @author Emil
+ * @author Mahyar
+ */
 public class Configurator {
     private static final Properties properties = new Properties();
-
+//Då man startar klasssen så skall detta undertill laddas därmed statiskt.
     static{
         try(InputStream inputStream = Configurator.class.getClassLoader().getResourceAsStream("application.properties")){
             if (inputStream == null){
@@ -23,6 +28,11 @@
         }
     }
 
+    /**
+     *
+     * @param key Namnet kopplat till den API nyckel vi vill åt.
+     * @return API nyckeln hämtat från application.properties.
+     */
     public static String getProperty(String key){
         return properties.getProperty(key);
     }
Index: target/classes/frontend/flights.json
===================================================================
diff --git a/target/classes/frontend/flights.json b/target/classes/frontend/flights.json
deleted file mode 100644
--- a/target/classes/frontend/flights.json	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ /dev/null	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
@@ -1,34 +0,0 @@
-[
-    {
-        "departure": "Stockholm",
-        "destination": "New York",
-        "departureDate": "2024-04-10",
-        "returnDate": "2024-04-20",
-        "price": 499,
-        "currency": "USD"
-    },
-    {
-        "departure": "Stockholm",
-        "destination": "Berlin",
-        "departureDate": "2024-04-12",
-        "returnDate": "2024-04-18",
-        "price": 150,
-        "currency": "EUR"
-    },
-    {
-        "departure": "Copenhagen",
-        "destination": "Stockholm ",
-        "departureDate": "2025-02-26",
-        "returnDate": "2025-02-28",
-        "price": 150,
-        "currency": "EUR"
-    },
-    {
-        "departure": "Paris",
-        "destination": "Tokyo",
-        "departureDate": "2024-05-05",
-        "returnDate": "2024-05-15",
-        "price": 899,
-        "currency": "JPY"
-    }
-]
\ No newline at end of file
Index: src/model/Flight.java
===================================================================
diff --git a/src/model/Flight.java b/src/model/Flight.java
deleted file mode 100644
--- a/src/model/Flight.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ /dev/null	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
@@ -1,5 +0,0 @@
-package model;
-
-
-public class Flight {
-}
Index: target/classes/frontend/flight-script.js
===================================================================
diff --git a/target/classes/frontend/flight-script.js b/target/classes/frontend/flight-script.js
deleted file mode 100644
--- a/target/classes/frontend/flight-script.js	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ /dev/null	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
@@ -1,87 +0,0 @@
-$(document).ready(function () {
-    const urlParams = new URLSearchParams(window.location.search);
-    let departure = urlParams.get("departure");
-    let destination = urlParams.get("destination");
-    let departureDate = urlParams.get("departureDate");
-    let returnDate = urlParams.get("returnDate");
-
-    if (!departure) {
-        $('#flights-results').html('<p>Error: Departure location is missing.</p>');
-        return;
-    }
-
-    $('#destination-title').text(`Flights to ${destination}`);
-
-    $.getJSON("/src/frontend/flights.json", function (flightsData) {
-        let filteredFlights = flightsData.filter(flight =>
-            flight.departure.toLowerCase().includes(departure.toLowerCase()) &&
-            flight.destination.toLowerCase().includes(destination.toLowerCase()) &&
-            (!departureDate || flight.departureDate === departureDate) &&
-            (!returnDate || flight.returnDate === returnDate || flight.returnDate === "")
-        );
-
-        displayFlights(filteredFlights);
-    });
-
-    fetchWeather(destination);
-
-    fetchAttractions(destination);
-});
-
-function displayFlights(flights) {
-    let flightsContainer = $('#flights-results');
-    flightsContainer.empty();
-
-    if (flights.length === 0) {
-        flightsContainer.append('<p>No flights found.</p>');
-        return;
-    }
-
-    flights.forEach(flight => {
-        flightsContainer.append(`
-            <div class="card shadow-sm p-3 mb-3">
-                <div class="card-body">
-                    <h5 class="card-title">${flight.departure} → ${flight.destination}</h5>
-                    <p><strong>Departure:</strong> ${flight.departureDate}</p>
-                    <p><strong>Return:</strong> ${flight.returnDate || 'One-way'}</p>
-                    <p><strong>Price:</strong> ${flight.price} ${flight.currency}</p>
-                </div>
-            </div>
-        `);
-    });
-}
-
-function fetchWeather(city) {
-    let weatherAPI = `https://your-weather-api.com/search?city=${city}`;
-
-    $.getJSON(weatherAPI, function (data) {
-        $('#weather-info').html(`
-            <h3>Weather in ${city}</h3>
-            <p>Temperature: ${data.main.temp}°C</p>
-            <p>Condition: ${data.weather[0].description}</p>
-        `);
-    }).fail(function () {
-        $('#weather-info').html('<p>Weather data not available.</p>');
-    });
-}
-
-function fetchAttractions(city) {
-    let attractionsAPI = `https://your-attractions-api.com/search?city=${city}`;
-
-    $.getJSON(attractionsAPI, function (data) {
-        let attractionsContainer = $('#attractions-info');
-        attractionsContainer.empty();
-
-        if (data.length === 0) {
-            attractionsContainer.append('<p>No attractions found.</p>');
-            return;
-        }
-
-        attractionsContainer.append('<h3>Top Attractions</h3>');
-        data.forEach(attraction => {
-            attractionsContainer.append(`<p>${attraction.name} - ${attraction.description}</p>`);
-        });
-    }).fail(function () {
-        $('#attractions-info').html('<p>Attractions data not available.</p>');
-    });
-}
\ No newline at end of file
Index: src/frontend/flight-script.js
===================================================================
diff --git a/src/frontend/flight-script.js b/src/frontend/flight-script.js
deleted file mode 100644
--- a/src/frontend/flight-script.js	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ /dev/null	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
@@ -1,87 +0,0 @@
-$(document).ready(function () {
-    const urlParams = new URLSearchParams(window.location.search);
-    let departure = urlParams.get("departure");
-    let destination = urlParams.get("destination");
-    let departureDate = urlParams.get("departureDate");
-    let returnDate = urlParams.get("returnDate");
-
-    if (!departure) {
-        $('#flights-results').html('<p>Error: Departure location is missing.</p>');
-        return;
-    }
-
-    $('#destination-title').text(`Flights to ${destination}`);
-
-    $.getJSON("/src/frontend/flights.json", function (flightsData) {
-        let filteredFlights = flightsData.filter(flight =>
-            flight.departure.toLowerCase().includes(departure.toLowerCase()) &&
-            flight.destination.toLowerCase().includes(destination.toLowerCase()) &&
-            (!departureDate || flight.departureDate === departureDate) &&
-            (!returnDate || flight.returnDate === returnDate || flight.returnDate === "")
-        );
-
-        displayFlights(filteredFlights);
-    });
-
-    fetchWeather(destination);
-
-    fetchAttractions(destination);
-});
-
-function displayFlights(flights) {
-    let flightsContainer = $('#flights-results');
-    flightsContainer.empty();
-
-    if (flights.length === 0) {
-        flightsContainer.append('<p>No flights found.</p>');
-        return;
-    }
-
-    flights.forEach(flight => {
-        flightsContainer.append(`
-            <div class="card shadow-sm p-3 mb-3">
-                <div class="card-body">
-                    <h5 class="card-title">${flight.departure} → ${flight.destination}</h5>
-                    <p><strong>Departure:</strong> ${flight.departureDate}</p>
-                    <p><strong>Return:</strong> ${flight.returnDate || 'One-way'}</p>
-                    <p><strong>Price:</strong> ${flight.price} ${flight.currency}</p>
-                </div>
-            </div>
-        `);
-    });
-}
-
-function fetchWeather(city) {
-    let weatherAPI = `https://your-weather-api.com/search?city=${city}`;
-
-    $.getJSON(weatherAPI, function (data) {
-        $('#weather-info').html(`
-            <h3>Weather in ${city}</h3>
-            <p>Temperature: ${data.main.temp}°C</p>
-            <p>Condition: ${data.weather[0].description}</p>
-        `);
-    }).fail(function () {
-        $('#weather-info').html('<p>Weather data not available.</p>');
-    });
-}
-
-function fetchAttractions(city) {
-    let attractionsAPI = `https://your-attractions-api.com/search?city=${city}`;
-
-    $.getJSON(attractionsAPI, function (data) {
-        let attractionsContainer = $('#attractions-info');
-        attractionsContainer.empty();
-
-        if (data.length === 0) {
-            attractionsContainer.append('<p>No attractions found.</p>');
-            return;
-        }
-
-        attractionsContainer.append('<h3>Top Attractions</h3>');
-        data.forEach(attraction => {
-            attractionsContainer.append(`<p>${attraction.name} - ${attraction.description}</p>`);
-        });
-    }).fail(function () {
-        $('#attractions-info').html('<p>Attractions data not available.</p>');
-    });
-}
\ No newline at end of file
Index: src/model/Place.java
===================================================================
diff --git a/src/model/Place.java b/src/model/Place.java
deleted file mode 100644
--- a/src/model/Place.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ /dev/null	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
@@ -1,4 +0,0 @@
-package model;
-
-public class Place {
-}
Index: src/model/Weather.java
===================================================================
diff --git a/src/model/Weather.java b/src/model/Weather.java
deleted file mode 100644
--- a/src/model/Weather.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ /dev/null	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
@@ -1,30 +0,0 @@
-package model;
-
-public class Weather {
-    private double temperatur;
-    private String nederbordTyp;
-
-    public Weather(){
-
-    }
-    public Weather(double temperatur,String nederbordTyp){
-        this.nederbordTyp = nederbordTyp;
-        this.temperatur = temperatur;
-    }
-
-    public double getTemperatur() {
-        return temperatur;
-    }
-
-    public void setTemperatur(double temperatur) {
-        this.temperatur = temperatur;
-    }
-
-    public String getNederbordTyp() {
-        return nederbordTyp;
-    }
-
-    public void setNederbordTyp(String nederbordTyp) {
-        this.nederbordTyp = nederbordTyp;
-    }
-}
Index: src/frontend/flights.json
===================================================================
diff --git a/src/frontend/flights.json b/src/frontend/flights.json
deleted file mode 100644
--- a/src/frontend/flights.json	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ /dev/null	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
@@ -1,34 +0,0 @@
-[
-    {
-        "departure": "Stockholm",
-        "destination": "New York",
-        "departureDate": "2024-04-10",
-        "returnDate": "2024-04-20",
-        "price": 499,
-        "currency": "USD"
-    },
-    {
-        "departure": "Stockholm",
-        "destination": "Berlin",
-        "departureDate": "2024-04-12",
-        "returnDate": "2024-04-18",
-        "price": 150,
-        "currency": "EUR"
-    },
-    {
-        "departure": "Copenhagen",
-        "destination": "Stockholm ",
-        "departureDate": "2025-02-26",
-        "returnDate": "2025-02-28",
-        "price": 150,
-        "currency": "EUR"
-    },
-    {
-        "departure": "Paris",
-        "destination": "Tokyo",
-        "departureDate": "2024-05-05",
-        "returnDate": "2024-05-15",
-        "price": 899,
-        "currency": "JPY"
-    }
-]
\ No newline at end of file
Index: target/classes/frontend/views/attractions.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"sv\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n  <title>Sevärdheter</title>\r\n  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n  <style>\r\n    body {\r\n        background-color: #f8f9fa;\r\n        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n        padding: 20px;\r\n    }\r\n\r\n    .main-heading {\r\n        font-size: 2.5rem;\r\n        color: #2c3e50;\r\n        margin-bottom: 1.5rem;\r\n        text-align: center;\r\n        font-weight: 600;\r\n        text-shadow: 1px 1px 3px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .attraction-card {\r\n        border-radius: 10px;\r\n        box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n        transition: transform 0.3s, box-shadow 0.3s;\r\n        margin-bottom: 20px;\r\n        border: none;\r\n        overflow: hidden;\r\n        height: 100%;\r\n    }\r\n\r\n    .attraction-card:hover {\r\n        transform: translateY(-5px);\r\n        box-shadow: 0 8px 16px rgba(0,0,0,0.2);\r\n    }\r\n\r\n    .card-title {\r\n        font-weight: 600;\r\n        color: #3498db;\r\n    }\r\n\r\n    .card-text {\r\n        color: #555;\r\n        font-size: 1rem;\r\n    }\r\n\r\n    .category-badge {\r\n        background-color: #3498db;\r\n        color: white;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        font-size: 0.8rem;\r\n        display: inline-block;\r\n        margin-bottom: 8px;\r\n    }\r\n\r\n    .no-description {\r\n        font-style: italic;\r\n        color: #999;\r\n    }\r\n\r\n    .container {\r\n        padding: 20px;\r\n        max-width: 1200px;\r\n    }\r\n\r\n    .btn-primary {\r\n        background-color: #3498db;\r\n        border: none;\r\n        padding: 8px 16px;\r\n        border-radius: 5px;\r\n        transition: background-color 0.3s;\r\n    }\r\n\r\n    .btn-primary:hover {\r\n        background-color: #2980b9;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n  <h1 class=\"main-heading\">Här är några platser du kan besöka</h1>\r\n\r\n  <div class=\"row\" id=\"attractions-container\">\r\n  </div>\r\n</div>\r\n\r\n<script>\r\n  document.addEventListener('DOMContentLoaded', function() {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const destination = urlParams.get('destination');\r\n\r\n      if (destination) {\r\n          fetchAttractions(destination);\r\n      } else {\r\n          document.getElementById('attractions-container').innerHTML = '<p class=\"text-center\">Ingen destination angiven.</p>';\r\n      }\r\n  });\r\n\r\n  async function fetchAttractions(destination) {\r\n      try {\r\n          const response = await fetch(`/api/attractions?destination=${encodeURIComponent(destination)}`);\r\n\r\n          if (!response.ok) {\r\n              throw new Error('Kunde inte hämta attraktioner');\r\n          }\r\n\r\n          const attractions = await response.json();\r\n          displayAttractions(attractions);\r\n      } catch (error) {\r\n          console.error('Fel vid hämtning av attraktioner:', error);\r\n          document.getElementById('attractions-container').innerHTML =\r\n              `<div class=\"col-12\"><div class=\"alert alert-danger\">Kunde inte hämta attraktioner: ${error.message}</div></div>`;\r\n      }\r\n  }\r\n\r\n  function displayAttractions(attractions) {\r\n      const container = document.getElementById('attractions-container');\r\n\r\n      if (!attractions || attractions.length === 0) {\r\n          container.innerHTML = '<p class=\"text-center\">Inga attraktioner hittades för denna destination.</p>';\r\n          return;\r\n      }\r\n\r\n      const attractionsHTML = attractions.map(attraction => {\r\n          return `\r\n          <div class=\"col-md-4 mb-4\">\r\n              <div class=\"card attraction-card\">\r\n                  <div class=\"card-body\">\r\n                      <span class=\"category-badge\">${attraction.kinds.split(',')[0]}</span>\r\n                      <h5 class=\"card-title\">${attraction.name}</h5>\r\n                      <p class=\"card-text\">\r\n                          ${attraction.wikipedia_extracts && attraction.wikipedia_extracts.text\r\n                              ? attraction.wikipedia_extracts.text\r\n                              : '<span class=\"no-description\">Ingen beskrivning tillgänglig</span>'}\r\n                      </p>\r\n                      ${attraction.wikipedia\r\n                          ? `<a href=\"${attraction.wikipedia}\" target=\"_blank\" class=\"btn btn-primary\">Läs mer</a>`\r\n                          : ''}\r\n                  </div>\r\n              </div>\r\n          </div>`;\r\n      }).join('');\r\n\r\n      container.innerHTML = attractionsHTML;\r\n  }\r\n</script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/frontend/views/attractions.html b/target/classes/frontend/views/attractions.html
--- a/target/classes/frontend/views/attractions.html	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/target/classes/frontend/views/attractions.html	(date 1741451182639)
@@ -2,149 +2,122 @@
 <html lang="sv">
 <head>
   <meta charset="UTF-8">
-  <meta name="viewport" content="width=device-width, initial-scale=1.0">
-  <title>Sevärdheter</title>
+  <title>Platser att besöka - SkyExplorer</title>
   <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
-  <style>
-    body {
-        background-color: #f8f9fa;
-        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
-        padding: 20px;
-    }
-
-    .main-heading {
-        font-size: 2.5rem;
-        color: #2c3e50;
-        margin-bottom: 1.5rem;
-        text-align: center;
-        font-weight: 600;
-        text-shadow: 1px 1px 3px rgba(0,0,0,0.1);
-    }
-
-    .attraction-card {
-        border-radius: 10px;
-        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
-        transition: transform 0.3s, box-shadow 0.3s;
-        margin-bottom: 20px;
-        border: none;
-        overflow: hidden;
-        height: 100%;
-    }
-
-    .attraction-card:hover {
-        transform: translateY(-5px);
-        box-shadow: 0 8px 16px rgba(0,0,0,0.2);
-    }
-
-    .card-title {
-        font-weight: 600;
-        color: #3498db;
-    }
-
-    .card-text {
-        color: #555;
-        font-size: 1rem;
-    }
-
-    .category-badge {
-        background-color: #3498db;
-        color: white;
-        padding: 4px 8px;
-        border-radius: 4px;
-        font-size: 0.8rem;
-        display: inline-block;
-        margin-bottom: 8px;
-    }
-
-    .no-description {
-        font-style: italic;
-        color: #999;
-    }
-
-    .container {
-        padding: 20px;
-        max-width: 1200px;
-    }
-
-    .btn-primary {
-        background-color: #3498db;
-        border: none;
-        padding: 8px 16px;
-        border-radius: 5px;
-        transition: background-color 0.3s;
-    }
-
-    .btn-primary:hover {
-        background-color: #2980b9;
-    }
-  </style>
+  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
+  <link rel="stylesheet" href="/src/frontend/style.css">
 </head>
 <body>
 <div class="container">
-  <h1 class="main-heading">Här är några platser du kan besöka</h1>
+  <h1>Platser att besöka i <span id="city-name"></span></h1>
+  <p class="intro-text">Här är några intressanta platser du kan besöka på din resa.</p>
+
+  <div id="loading">
+    <p>Laddar platser...</p>
+  </div>
 
-  <div class="row" id="attractions-container">
+  <div id="attractions-container">
+  </div>
+
+  <div id="error-message" style="display: none;">
+    Ett fel uppstod vid hämtning av platser.
   </div>
+
+  <p><a href="index.html" class="btn btn-primary">Tillbaka till sökning</a></p>
 </div>
 
+<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
 <script>
-  document.addEventListener('DOMContentLoaded', function() {
+  $(document).ready(function() {
       const urlParams = new URLSearchParams(window.location.search);
-      const destination = urlParams.get('destination');
+      const city = urlParams.get('city');
 
-      if (destination) {
-          fetchAttractions(destination);
-      } else {
-          document.getElementById('attractions-container').innerHTML = '<p class="text-center">Ingen destination angiven.</p>';
+      if (!city) {
+          window.location.href = "index.html";
+          return;
       }
+
+      $("#city-name").text(city);
+      loadAttractions(city);
   });
 
-  async function fetchAttractions(destination) {
-      try {
-          const response = await fetch(`/api/attractions?destination=${encodeURIComponent(destination)}`);
+  function loadAttractions(city) {
+      $("#loading").show();
+      $("#attractions-container").empty();
+      $("#error-message").hide();
 
-          if (!response.ok) {
-              throw new Error('Kunde inte hämta attraktioner');
-          }
-
-          const attractions = await response.json();
-          displayAttractions(attractions);
-      } catch (error) {
-          console.error('Fel vid hämtning av attraktioner:', error);
-          document.getElementById('attractions-container').innerHTML =
-              `<div class="col-12"><div class="alert alert-danger">Kunde inte hämta attraktioner: ${error.message}</div></div>`;
-      }
+      const url = `http://localhost:7000/attractions?city=${encodeURIComponent(city)}`;
+
+      fetch(url)
+          .then(response => {
+              if (!response.ok) {
+                  return response.json().then(data => {
+                      throw new Error(data.error || "Kunde inte hämta platser");
+                  });
+              }
+              return response.json();
+          })
+          .then(attractions => {
+              displayAttractions(attractions);
+          })
+          .catch(error => {
+              console.error("Error:", error);
+              $("#error-message").show();
+          })
+          .finally(() => {
+              $("#loading").hide();
+          });
   }
 
   function displayAttractions(attractions) {
-      const container = document.getElementById('attractions-container');
-
-      if (!attractions || attractions.length === 0) {
-          container.innerHTML = '<p class="text-center">Inga attraktioner hittades för denna destination.</p>';
+      if (attractions.length === 0) {
+          $("#attractions-container").html('<p>Inga platser hittades för denna destination.</p>');
           return;
       }
 
-      const attractionsHTML = attractions.map(attraction => {
-          return `
-          <div class="col-md-4 mb-4">
-              <div class="card attraction-card">
-                  <div class="card-body">
-                      <span class="category-badge">${attraction.kinds.split(',')[0]}</span>
-                      <h5 class="card-title">${attraction.name}</h5>
-                      <p class="card-text">
-                          ${attraction.wikipedia_extracts && attraction.wikipedia_extracts.text
-                              ? attraction.wikipedia_extracts.text
-                              : '<span class="no-description">Ingen beskrivning tillgänglig</span>'}
-                      </p>
-                      ${attraction.wikipedia
-                          ? `<a href="${attraction.wikipedia}" target="_blank" class="btn btn-primary">Läs mer</a>`
-                          : ''}
-                  </div>
+      attractions.forEach(attraction => {
+          const categories = attraction.kinds.split(",");
+          let categoryHtml = '';
+
+          categories.slice(0, 2).forEach(category => {
+              const categoryName = formatCategory(category.trim());
+              categoryHtml += `<span class="category">${categoryName}</span>`;
+          });
+
+          let description = attraction.description || 'Ingen beskrivning tillgänglig.';
+
+          const item = `
+              <div class="attraction-item">
+                  <h2>${attraction.name}</h2>
+                  <div>${categoryHtml}</div>
+                  ${attraction.imageUrl ? `<img src="${attraction.imageUrl}" alt="${attraction.name}" class="attraction-image">` : ''}
+                  <p>${description}</p>
+                  <p><a class="map-link" href="https://www.google.com/maps/search/?api=1&query=${attraction.latitude},${attraction.longitude}" target="_blank">Visa på karta</a></p>
               </div>
-          </div>`;
-      }).join('');
+          `;
+
+          $("#attractions-container").append(item);
+      });
+  }
 
-      container.innerHTML = attractionsHTML;
+  function formatCategory(category) {
+      const categoryMap = {
+          "cultural": "Kultur",
+          "natural": "Natur",
+          "amusements": "Nöjen",
+          "historic": "Historiskt",
+          "architecture": "Arkitektur",
+          "museums": "Museum",
+          "religion": "Religion",
+          "foods": "Mat & Dryck",
+          "shops": "Shopping",
+          "tourist_facilities": "Turistanläggning",
+          "interesting_places": "Intressant plats",
+          "monuments": "Monument",
+          "theatres_and_entertainments": "Teater & Underhållning"
+      };
+
+      return categoryMap[category] || category;
   }
 </script>
 </body>
Index: target/classes/frontend/views/api-docs.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"sv\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>SkyExplorer API Documentation</title>\r\n    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n    <style>\r\n        body {\r\n            padding-top: 20px;\r\n            padding-bottom: 40px;\r\n        }\r\n        .api-section {\r\n            margin-bottom: 30px;\r\n        }\r\n        pre {\r\n            background-color: #f8f9fa;\r\n            padding: 15px;\r\n            border-radius: 5px;\r\n            overflow-x: auto;\r\n        }\r\n        .method-badge {\r\n            font-size: 14px;\r\n            padding: 5px 10px;\r\n            border-radius: 4px;\r\n            margin-right: 10px;\r\n        }\r\n        .get-badge {\r\n            background-color: #0d6efd;\r\n            color: white;\r\n        }\r\n        .tab-content {\r\n            padding: 20px;\r\n            border: 1px solid #dee2e6;\r\n            border-top: none;\r\n            border-radius: 0 0 5px 5px;\r\n        }\r\n        .nav-tabs {\r\n            margin-bottom: 0;\r\n        }\r\n        .table-responsive {\r\n            margin-bottom: 20px;\r\n        }\r\n        .accordion-button:not(.collapsed) {\r\n            background-color: #e7f1ff;\r\n            color: #0c63e4;\r\n        }\r\n    </style>\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n    <header class=\"d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4 border-bottom\">\r\n        <div class=\"col-md-3 mb-2 mb-md-0\">\r\n            <a href=\"index.html\" class=\"d-inline-flex link-body-emphasis text-decoration-none\">\r\n                <img src=\"/src/frontend/images/logo.jpeg\" alt=\"Logo\" width=\"100\" height=\"100\" class=\"d-block\">\r\n            </a>\r\n        </div>\r\n        <ul class=\"nav col-12 col-md-auto mb-2 justify-content-center mb-md-0\">\r\n            <li><a href=\"index.html\" class=\"nav-link px-2\">Home</a></li>\r\n            <li><a href=\"api-docs.html\" class=\"nav-link px-2 link-secondary\">API Docs</a></li>\r\n            <li><a href=\"faq.html\" class=\"nav-link px-2\">FAQs</a></li>\r\n            <li><a href=\"about.html\" class=\"nav-link px-2\">About</a></li>\r\n        </ul>\r\n    </header>\r\n\r\n    <main>\r\n        <h1 class=\"display-5 fw-bold mb-3\">SkyExplorer API Documentation</h1>\r\n        <p class=\"fs-5 text-muted mb-5\">API documentation for the SkyExplorer flight and weather search service</p>\r\n\r\n        <ul class=\"nav nav-tabs\" id=\"apiTabs\" role=\"tablist\">\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <button class=\"nav-link active\" id=\"overview-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#overview\" type=\"button\" role=\"tab\" aria-controls=\"overview\" aria-selected=\"true\">Overview</button>\r\n            </li>\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <button class=\"nav-link\" id=\"endpoints-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#endpoints\" type=\"button\" role=\"tab\" aria-controls=\"endpoints\" aria-selected=\"false\">Endpoints</button>\r\n            </li>\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <button class=\"nav-link\" id=\"models-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#models\" type=\"button\" role=\"tab\" aria-controls=\"models\" aria-selected=\"false\">Data Models</button>\r\n            </li>\r\n            <li class=\"nav-item\" role=\"presentation\">\r\n                <button class=\"nav-link\" id=\"examples-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#examples\" type=\"button\" role=\"tab\" aria-controls=\"examples\" aria-selected=\"false\">Examples</button>\r\n            </li>\r\n        </ul>\r\n\r\n        <div class=\"tab-content\" id=\"apiTabsContent\">\r\n            <!-- Overview Tab -->\r\n            <div class=\"tab-pane fade show active\" id=\"overview\" role=\"tabpanel\" aria-labelledby=\"overview-tab\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <h2 class=\"card-title\">SkyExplorer API Overview</h2>\r\n                        <p class=\"card-subtitle text-muted\">A RESTful API for searching flights and retrieving weather information</p>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <p>\r\n                            The SkyExplorer API provides a unified interface for searching flights between locations and retrieving\r\n                            weather forecasts for destinations. It aggregates data from multiple sources including SkyScanner for\r\n                            flight information and Tomorrow.io for weather data.\r\n                        </p>\r\n\r\n                        <h3 class=\"mt-4\">Base URL</h3>\r\n                        <div class=\"bg-light p-3 rounded\">\r\n                            <code>http://localhost:7000</code>\r\n                        </div>\r\n\r\n                        <h3 class=\"mt-4\">Authentication</h3>\r\n                        <p>\r\n                            The API currently does not require authentication for requests.\r\n                        </p>\r\n\r\n                        <h3 class=\"mt-4\">Rate Limiting</h3>\r\n                        <p>\r\n                            There are no specific rate limits imposed by the SkyExplorer API itself, but be aware that the\r\n                            underlying external APIs (SkyScanner and Tomorrow.io) have their own rate limits.\r\n                        </p>\r\n\r\n                        <h3 class=\"mt-4\">Response Format</h3>\r\n                        <p>\r\n                            All API responses are returned in JSON format. Successful responses will contain the requested data,\r\n                            while error responses will include an error message and appropriate HTTP status code.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Endpoints Tab -->\r\n            <div class=\"tab-pane fade\" id=\"endpoints\" role=\"tabpanel\" aria-labelledby=\"endpoints-tab\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <h2 class=\"card-title\">API Endpoints</h2>\r\n                        <p class=\"card-subtitle text-muted\">Available endpoints and their parameters</p>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <h3>\r\n                            <span class=\"method-badge get-badge\">GET</span> /search\r\n                        </h3>\r\n                        <p class=\"mt-2 mb-4\">\r\n                            Search for flights between locations and retrieve weather information for the destination.\r\n                        </p>\r\n\r\n                        <h4 class=\"mt-4\">Query Parameters</h4>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-striped\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Parameter</th>\r\n                                    <th>Type</th>\r\n                                    <th>Required</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>from</td>\r\n                                    <td>string</td>\r\n                                    <td>Yes</td>\r\n                                    <td>Departure city or airport code</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>destination</td>\r\n                                    <td>string</td>\r\n                                    <td>Yes</td>\r\n                                    <td>Destination city or airport code</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>departDate</td>\r\n                                    <td>string</td>\r\n                                    <td>Yes</td>\r\n                                    <td>Departure date in YYYY-MM-DD format</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h4 class=\"mt-4\">Response</h4>\r\n                        <p>\r\n                            Returns a JSON object containing flight search results and weather forecast for the destination.\r\n                        </p>\r\n\r\n                        <h4 class=\"mt-4\">Response Fields</h4>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-striped\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Field</th>\r\n                                    <th>Type</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>flights</td>\r\n                                    <td>array</td>\r\n                                    <td>List of flight results matching the search criteria</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>weather</td>\r\n                                    <td>object</td>\r\n                                    <td>Weather forecast data for the destination</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        <h4 class=\"mt-4\">Status Codes</h4>\r\n                        <div class=\"table-responsive\">\r\n                            <table class=\"table table-striped\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Code</th>\r\n                                    <th>Description</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>200</td>\r\n                                    <td>Success - Returns flight and weather data</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>400</td>\r\n                                    <td>Bad Request - Missing or invalid parameters</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>404</td>\r\n                                    <td>Not Found - No flights found for the specified route</td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>500</td>\r\n                                    <td>Internal Server Error - Error occurred while processing the request</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Models Tab -->\r\n            <div class=\"tab-pane fade\" id=\"models\" role=\"tabpanel\" aria-labelledby=\"models-tab\">\r\n                <div class=\"accordion\" id=\"modelsAccordion\">\r\n                    <!-- FlightResult Model -->\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"flightResultHeading\">\r\n                            <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flightResultCollapse\" aria-expanded=\"true\" aria-controls=\"flightResultCollapse\">\r\n                                <strong>FlightResult</strong> <span class=\"badge bg-primary ms-2\">Response Model</span>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"flightResultCollapse\" class=\"accordion-collapse collapse show\" aria-labelledby=\"flightResultHeading\" data-bs-parent=\"#modelsAccordion\">\r\n                            <div class=\"accordion-body\">\r\n                                <p>Represents a single flight search result with details about the flight.</p>\r\n\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Field</th>\r\n                                            <th>Type</th>\r\n                                            <th>Description</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td>id</td>\r\n                                            <td>string</td>\r\n                                            <td>Unique identifier for the flight</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>price</td>\r\n                                            <td>number</td>\r\n                                            <td>The price of the flight</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>formattedPrice</td>\r\n                                            <td>string</td>\r\n                                            <td>Formatted price with currency symbol</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>departureCity</td>\r\n                                            <td>string</td>\r\n                                            <td>City of departure</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>arrivalCity</td>\r\n                                            <td>string</td>\r\n                                            <td>City of arrival</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>departureTime</td>\r\n                                            <td>string</td>\r\n                                            <td>Departure time in ISO format</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>arrivalTime</td>\r\n                                            <td>string</td>\r\n                                            <td>Arrival time in ISO format</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>duration</td>\r\n                                            <td>number</td>\r\n                                            <td>Flight duration in minutes</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>stops</td>\r\n                                            <td>number</td>\r\n                                            <td>Number of stops</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>airline</td>\r\n                                            <td>string</td>\r\n                                            <td>Name of the airline</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>departureAirport</td>\r\n                                            <td>string</td>\r\n                                            <td>Name of the departure airport</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>arrivalAirport</td>\r\n                                            <td>string</td>\r\n                                            <td>Name of the arrival airport</td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- WeatherData Model -->\r\n                    <div class=\"accordion-item\">\r\n                        <h2 class=\"accordion-header\" id=\"weatherDataHeading\">\r\n                            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#weatherDataCollapse\" aria-expanded=\"false\" aria-controls=\"weatherDataCollapse\">\r\n                                <strong>WeatherData</strong> <span class=\"badge bg-primary ms-2\">Response Model</span>\r\n                            </button>\r\n                        </h2>\r\n                        <div id=\"weatherDataCollapse\" class=\"accordion-collapse collapse\" aria-labelledby=\"weatherDataHeading\" data-bs-parent=\"#modelsAccordion\">\r\n                            <div class=\"accordion-body\">\r\n                                <p>Represents weather forecast data for a location.</p>\r\n\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Field</th>\r\n                                            <th>Type</th>\r\n                                            <th>Description</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td>timelines</td>\r\n                                            <td>object</td>\r\n                                            <td>Contains weather timelines</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>timelines.hourly</td>\r\n                                            <td>array</td>\r\n                                            <td>Hourly weather forecast data</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>timelines.hourly[].time</td>\r\n                                            <td>string</td>\r\n                                            <td>Timestamp for the forecast in ISO format</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>timelines.hourly[].values</td>\r\n                                            <td>object</td>\r\n                                            <td>Weather values for this time period</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>timelines.hourly[].values.temperature</td>\r\n                                            <td>number</td>\r\n                                            <td>Temperature in Celsius</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>timelines.hourly[].values.weatherCode</td>\r\n                                            <td>number</td>\r\n                                            <td>Code representing weather conditions</td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n\r\n                                <h4 class=\"mt-4\">Weather Codes</h4>\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-striped\">\r\n                                        <thead>\r\n                                        <tr>\r\n                                            <th>Code</th>\r\n                                            <th>Description</th>\r\n                                        </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                        <tr>\r\n                                            <td>1000</td>\r\n                                            <td>Clear, Sunny</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>1100</td>\r\n                                            <td>Mostly Clear</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>1101</td>\r\n                                            <td>Partly Cloudy</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>1102</td>\r\n                                            <td>Mostly Cloudy</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>1001</td>\r\n                                            <td>Cloudy</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>4000, 4200</td>\r\n                                            <td>Light Rain, Drizzle</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>4001, 4201</td>\r\n                                            <td>Rain, Heavy Rain</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>5000, 5100</td>\r\n                                            <td>Snow, Light Snow</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>5101</td>\r\n                                            <td>Heavy Snow</td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>8000</td>\r\n                                            <td>Thunderstorm</td>\r\n                                        </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- Examples Tab -->\r\n            <div class=\"tab-pane fade\" id=\"examples\" role=\"tabpanel\" aria-labelledby=\"examples-tab\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-header\">\r\n                        <h2 class=\"card-title\">Example Requests and Responses</h2>\r\n                        <p class=\"card-subtitle text-muted\">Sample API calls and their responses</p>\r\n                    </div>\r\n                    <div class=\"card-body\">\r\n                        <h3>Example Request</h3>\r\n                        <pre><code>GET http://localhost:7000/search?from=Stockholm&destination=London&departDate=2023-12-25</code></pre>\r\n\r\n                        <h3 class=\"mt-4\">Example Response</h3>\r\n                        <pre><code>{\r\n  \"flights\": [\r\n    {\r\n      \"price\": 299.99,\r\n      \"formattedPrice\": \"$299.99\",\r\n      \"departureCity\": \"Stockholm\",\r\n      \"arrivalCity\": \"London\",\r\n      \"departureTime\": \"2023-12-25T08:30:00\",\r\n      \"arrivalTime\": \"2023-12-25T10:45:00\",\r\n      \"duration\": 135,\r\n      \"stops\": 0,\r\n      \"airline\": \"SAS\",\r\n      \"departureAirport\": \"Stockholm Arlanda Airport\",\r\n      \"arrivalAirport\": \"London Heathrow Airport\"\r\n    },\r\n    {\r\n      \"price\": 349.50,\r\n      \"formattedPrice\": \"$349.50\",\r\n      \"departureCity\": \"Stockholm\",\r\n      \"arrivalCity\": \"London\",\r\n      \"departureTime\": \"2023-12-25T12:15:00\",\r\n      \"arrivalTime\": \"2023-12-25T14:30:00\",\r\n      \"duration\": 135,\r\n      \"stops\": 0,\r\n      \"airline\": \"British Airways\",\r\n      \"departureAirport\": \"Stockholm Arlanda Airport\",\r\n      \"arrivalAirport\": \"London Heathrow Airport\"\r\n    }\r\n  ],\r\n  \"weather\": {\r\n    \"timelines\": {\r\n      \"hourly\": [\r\n        {\r\n          \"time\": \"2023-12-25T00:00:00Z\",\r\n          \"values\": {\r\n            \"temperature\": 5.2,\r\n            \"weatherCode\": 1001\r\n          }\r\n        },\r\n        {\r\n          \"time\": \"2023-12-25T01:00:00Z\",\r\n          \"values\": {\r\n            \"temperature\": 4.8,\r\n            \"weatherCode\": 1001\r\n          }\r\n        },\r\n        {\r\n          \"time\": \"2023-12-25T02:00:00Z\",\r\n          \"values\": {\r\n            \"temperature\": 4.5,\r\n            \"weatherCode\": 1101\r\n          }\r\n        }\r\n        // Additional hourly forecasts...\r\n      ]\r\n    }\r\n  }\r\n}</code></pre>\r\n\r\n                        <h3 class=\"mt-4\">Error Response Example</h3>\r\n                        <pre><code>{\r\n  \"error\": \"Failed to search flights. Status code: 404\",\r\n  \"message\": \"No flights found for the specified route and date.\"\r\n}</code></pre>\r\n\r\n                        <h3 class=\"mt-4\">Using the API with JavaScript</h3>\r\n                        <pre><code>// Example of how to call the API using JavaScript fetch\r\nasync function searchFlightsAndWeather() {\r\n  const departureCity = \"Stockholm\";\r\n  const destinationCity = \"London\";\r\n  const departureDate = \"2023-12-25\";\r\n\r\n  try {\r\n    const url = `http://localhost:7000/search?from=${encodeURIComponent(departureCity)}&destination=${encodeURIComponent(destinationCity)}&departDate=${encodeURIComponent(departureDate)}`;\r\n\r\n    const response = await fetch(url);\r\n    if (!response.ok) {\r\n      throw new Error(\"Network error: \" + response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Flights:\", data.flights);\r\n    console.log(\"Weather:\", data.weather);\r\n\r\n    // Process the data...\r\n  } catch (error) {\r\n    console.error(\"Error calling API:\", error);\r\n  }\r\n}</code></pre>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </main>\r\n\r\n    <footer class=\"py-3 my-4\">\r\n        <ul class=\"nav justify-content-center border-bottom pb-3 mb-3\">\r\n            <li class=\"nav-item\"><a href=\"faq.html\" class=\"nav-link px-2 text-body-secondary\">FAQs</a></li>\r\n            <li class=\"nav-item\"><a href=\"about.html\" class=\"nav-link px-2 text-body-secondary\">About</a></li>\r\n        </ul>\r\n        <p class=\"text-center text-body-secondary\">&copy; 2024 SkyExplorer, Inc</p>\r\n    </footer>\r\n</div>\r\n\r\n<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/frontend/views/api-docs.html b/target/classes/frontend/views/api-docs.html
--- a/target/classes/frontend/views/api-docs.html	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/target/classes/frontend/views/api-docs.html	(date 1741453153652)
@@ -2,559 +2,421 @@
 <html lang="sv">
 <head>
     <meta charset="UTF-8">
-    <title>SkyExplorer API Documentation</title>
-    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
-    <style>
-        body {
-            padding-top: 20px;
-            padding-bottom: 40px;
-        }
-        .api-section {
-            margin-bottom: 30px;
-        }
-        pre {
-            background-color: #f8f9fa;
-            padding: 15px;
-            border-radius: 5px;
-            overflow-x: auto;
-        }
-        .method-badge {
-            font-size: 14px;
-            padding: 5px 10px;
-            border-radius: 4px;
-            margin-right: 10px;
-        }
-        .get-badge {
-            background-color: #0d6efd;
-            color: white;
-        }
-        .tab-content {
-            padding: 20px;
-            border: 1px solid #dee2e6;
-            border-top: none;
-            border-radius: 0 0 5px 5px;
-        }
-        .nav-tabs {
-            margin-bottom: 0;
-        }
-        .table-responsive {
-            margin-bottom: 20px;
-        }
-        .accordion-button:not(.collapsed) {
-            background-color: #e7f1ff;
-            color: #0c63e4;
-        }
-    </style>
+    <title>SkyExplorer API Dokumentation</title>
+    <link rel="stylesheet" href="/src/frontend/style.css">
+
 </head>
 <body>
 <div class="container">
-    <header class="d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4 border-bottom">
-        <div class="col-md-3 mb-2 mb-md-0">
-            <a href="index.html" class="d-inline-flex link-body-emphasis text-decoration-none">
-                <img src="/src/frontend/images/logo.jpeg" alt="Logo" width="100" height="100" class="d-block">
-            </a>
-        </div>
-        <ul class="nav col-12 col-md-auto mb-2 justify-content-center mb-md-0">
-            <li><a href="index.html" class="nav-link px-2">Home</a></li>
-            <li><a href="api-docs.html" class="nav-link px-2 link-secondary">API Docs</a></li>
-            <li><a href="faq.html" class="nav-link px-2">FAQs</a></li>
-            <li><a href="about.html" class="nav-link px-2">About</a></li>
-        </ul>
-    </header>
-
-    <main>
-        <h1 class="display-5 fw-bold mb-3">SkyExplorer API Documentation</h1>
-        <p class="fs-5 text-muted mb-5">API documentation for the SkyExplorer flight and weather search service</p>
+    <h1>SkyExplorer API Dokumentation</h1>
+    <a href="index.html" class="tillbakaKnapp">Tillbaka till huvudmenyn</a>
+    <p>Detta är dokumentationen för SkyExplorer API:et som används för att söka flyg, väder och sevärdheter.</p>
 
-        <ul class="nav nav-tabs" id="apiTabs" role="tablist">
-            <li class="nav-item" role="presentation">
-                <button class="nav-link active" id="overview-tab" data-bs-toggle="tab" data-bs-target="#overview" type="button" role="tab" aria-controls="overview" aria-selected="true">Overview</button>
-            </li>
-            <li class="nav-item" role="presentation">
-                <button class="nav-link" id="endpoints-tab" data-bs-toggle="tab" data-bs-target="#endpoints" type="button" role="tab" aria-controls="endpoints" aria-selected="false">Endpoints</button>
-            </li>
-            <li class="nav-item" role="presentation">
-                <button class="nav-link" id="models-tab" data-bs-toggle="tab" data-bs-target="#models" type="button" role="tab" aria-controls="models" aria-selected="false">Data Models</button>
-            </li>
-            <li class="nav-item" role="presentation">
-                <button class="nav-link" id="examples-tab" data-bs-toggle="tab" data-bs-target="#examples" type="button" role="tab" aria-controls="examples" aria-selected="false">Examples</button>
-            </li>
-        </ul>
-
-        <div class="tab-content" id="apiTabsContent">
-            <!-- Overview Tab -->
-            <div class="tab-pane fade show active" id="overview" role="tabpanel" aria-labelledby="overview-tab">
-                <div class="card">
-                    <div class="card-header">
-                        <h2 class="card-title">SkyExplorer API Overview</h2>
-                        <p class="card-subtitle text-muted">A RESTful API for searching flights and retrieving weather information</p>
-                    </div>
-                    <div class="card-body">
-                        <p>
-                            The SkyExplorer API provides a unified interface for searching flights between locations and retrieving
-                            weather forecasts for destinations. It aggregates data from multiple sources including SkyScanner for
-                            flight information and Tomorrow.io for weather data.
-                        </p>
-
-                        <h3 class="mt-4">Base URL</h3>
-                        <div class="bg-light p-3 rounded">
-                            <code>http://localhost:7000</code>
-                        </div>
-
-                        <h3 class="mt-4">Authentication</h3>
-                        <p>
-                            The API currently does not require authentication for requests.
-                        </p>
-
-                        <h3 class="mt-4">Rate Limiting</h3>
-                        <p>
-                            There are no specific rate limits imposed by the SkyExplorer API itself, but be aware that the
-                            underlying external APIs (SkyScanner and Tomorrow.io) have their own rate limits.
-                        </p>
-
-                        <h3 class="mt-4">Response Format</h3>
-                        <p>
-                            All API responses are returned in JSON format. Successful responses will contain the requested data,
-                            while error responses will include an error message and appropriate HTTP status code.
-                        </p>
-                    </div>
-                </div>
-            </div>
+    <div class="section">
+        <h2>Översikt</h2>
+        <p>
+            Vårt API låter dig söka efter flyg mellan olika platser, få väderinformation för destinationen,
+            samt hitta intressanta sevärdheter att besöka på din destination.
+        </p>
+        <p><strong>Bas-URL:</strong> <span class="endpoint">http://localhost:7000</span></p>
+    </div>
 
-            <!-- Endpoints Tab -->
-            <div class="tab-pane fade" id="endpoints" role="tabpanel" aria-labelledby="endpoints-tab">
-                <div class="card">
-                    <div class="card-header">
-                        <h2 class="card-title">API Endpoints</h2>
-                        <p class="card-subtitle text-muted">Available endpoints and their parameters</p>
-                    </div>
-                    <div class="card-body">
-                        <h3>
-                            <span class="method-badge get-badge">GET</span> /search
-                        </h3>
-                        <p class="mt-2 mb-4">
-                            Search for flights between locations and retrieve weather information for the destination.
-                        </p>
+    <div class="section">
+        <h2>Endpoints</h2>
 
-                        <h4 class="mt-4">Query Parameters</h4>
-                        <div class="table-responsive">
-                            <table class="table table-striped">
-                                <thead>
-                                <tr>
-                                    <th>Parameter</th>
-                                    <th>Type</th>
-                                    <th>Required</th>
-                                    <th>Description</th>
-                                </tr>
-                                </thead>
-                                <tbody>
-                                <tr>
-                                    <td>from</td>
-                                    <td>string</td>
-                                    <td>Yes</td>
-                                    <td>Departure city or airport code</td>
-                                </tr>
-                                <tr>
-                                    <td>destination</td>
-                                    <td>string</td>
-                                    <td>Yes</td>
-                                    <td>Destination city or airport code</td>
-                                </tr>
-                                <tr>
-                                    <td>departDate</td>
-                                    <td>string</td>
-                                    <td>Yes</td>
-                                    <td>Departure date in YYYY-MM-DD format</td>
-                                </tr>
-                                </tbody>
-                            </table>
-                        </div>
-
-                        <h4 class="mt-4">Response</h4>
-                        <p>
-                            Returns a JSON object containing flight search results and weather forecast for the destination.
-                        </p>
-
-                        <h4 class="mt-4">Response Fields</h4>
-                        <div class="table-responsive">
-                            <table class="table table-striped">
-                                <thead>
-                                <tr>
-                                    <th>Field</th>
-                                    <th>Type</th>
-                                    <th>Description</th>
-                                </tr>
-                                </thead>
-                                <tbody>
-                                <tr>
-                                    <td>flights</td>
-                                    <td>array</td>
-                                    <td>List of flight results matching the search criteria</td>
-                                </tr>
-                                <tr>
-                                    <td>weather</td>
-                                    <td>object</td>
-                                    <td>Weather forecast data for the destination</td>
-                                </tr>
-                                </tbody>
-                            </table>
-                        </div>
+        <h3><span class="method get">GET</span> <span class="endpoint">/search</span></h3>
+        <p>Söker efter flyg och hämtar väderinformation för destinationen.</p>
+
+        <h4>Parametrar:</h4>
+        <table>
+            <tr>
+                <th>Parameter</th>
+                <th>Typ</th>
+                <th>Beskrivning</th>
+                <th>Obligatorisk</th>
+            </tr>
+            <tr>
+                <td>from</td>
+                <td>string</td>
+                <td>Avresestad eller flygplatskod</td>
+                <td><span class="required">Ja</span></td>
+            </tr>
+            <tr>
+                <td>destination</td>
+                <td>string</td>
+                <td>Destinationsstad eller flygplatskod</td>
+                <td><span class="required">Ja</span></td>
+            </tr>
+            <tr>
+                <td>departDate</td>
+                <td>string</td>
+                <td>Avresedatum i formatet ÅÅÅÅ-MM-DD</td>
+                <td><span class="required">Ja</span></td>
+            </tr>
+            <tr>
+                <td>returnDate</td>
+                <td>string</td>
+                <td>Returresedatum i formatet ÅÅÅÅ-MM-DD</td>
+                <td><span class="optional">Nej</span></td>
+            </tr>
+        </table>
+
+        <h4>Svar:</h4>
+        <p>API:et returnerar ett JSON-objekt med flygresultat och väderprognos.</p>
 
-                        <h4 class="mt-4">Status Codes</h4>
-                        <div class="table-responsive">
-                            <table class="table table-striped">
-                                <thead>
-                                <tr>
-                                    <th>Code</th>
-                                    <th>Description</th>
-                                </tr>
-                                </thead>
-                                <tbody>
-                                <tr>
-                                    <td>200</td>
-                                    <td>Success - Returns flight and weather data</td>
-                                </tr>
-                                <tr>
-                                    <td>400</td>
-                                    <td>Bad Request - Missing or invalid parameters</td>
-                                </tr>
-                                <tr>
-                                    <td>404</td>
-                                    <td>Not Found - No flights found for the specified route</td>
-                                </tr>
-                                <tr>
-                                    <td>500</td>
-                                    <td>Internal Server Error - Error occurred while processing the request</td>
-                                </tr>
-                                </tbody>
-                            </table>
-                        </div>
-                    </div>
-                </div>
-            </div>
+        <h3><span class="method get">GET</span> <span class="endpoint">/attractions</span></h3>
+        <p>Hämtar sevärdheter och intressanta platser för en specifik destination.</p>
+
+        <h4>Parametrar:</h4>
+        <table>
+            <tr>
+                <th>Parameter</th>
+                <th>Typ</th>
+                <th>Beskrivning</th>
+                <th>Obligatorisk</th>
+            </tr>
+            <tr>
+                <td>city</td>
+                <td>string</td>
+                <td>Staden eller platsen att hitta sevärdheter för</td>
+                <td><span class="required">Ja</span></td>
+            </tr>
+        </table>
+
+        <h4>Svar:</h4>
+        <p>API:et returnerar en array av sevärdheter med information som namn, beskrivning, kategori och plats.</p>
+    </div>
 
-            <!-- Models Tab -->
-            <div class="tab-pane fade" id="models" role="tabpanel" aria-labelledby="models-tab">
-                <div class="accordion" id="modelsAccordion">
-                    <!-- FlightResult Model -->
-                    <div class="accordion-item">
-                        <h2 class="accordion-header" id="flightResultHeading">
-                            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#flightResultCollapse" aria-expanded="true" aria-controls="flightResultCollapse">
-                                <strong>FlightResult</strong> <span class="badge bg-primary ms-2">Response Model</span>
-                            </button>
-                        </h2>
-                        <div id="flightResultCollapse" class="accordion-collapse collapse show" aria-labelledby="flightResultHeading" data-bs-parent="#modelsAccordion">
-                            <div class="accordion-body">
-                                <p>Represents a single flight search result with details about the flight.</p>
+    <div class="section">
+        <h2>Datamodeller</h2>
 
-                                <div class="table-responsive">
-                                    <table class="table table-striped">
-                                        <thead>
-                                        <tr>
-                                            <th>Field</th>
-                                            <th>Type</th>
-                                            <th>Description</th>
-                                        </tr>
-                                        </thead>
-                                        <tbody>
-                                        <tr>
-                                            <td>id</td>
-                                            <td>string</td>
-                                            <td>Unique identifier for the flight</td>
-                                        </tr>
-                                        <tr>
-                                            <td>price</td>
-                                            <td>number</td>
-                                            <td>The price of the flight</td>
-                                        </tr>
-                                        <tr>
-                                            <td>formattedPrice</td>
-                                            <td>string</td>
-                                            <td>Formatted price with currency symbol</td>
-                                        </tr>
-                                        <tr>
-                                            <td>departureCity</td>
-                                            <td>string</td>
-                                            <td>City of departure</td>
-                                        </tr>
-                                        <tr>
-                                            <td>arrivalCity</td>
-                                            <td>string</td>
-                                            <td>City of arrival</td>
-                                        </tr>
-                                        <tr>
-                                            <td>departureTime</td>
-                                            <td>string</td>
-                                            <td>Departure time in ISO format</td>
-                                        </tr>
-                                        <tr>
-                                            <td>arrivalTime</td>
-                                            <td>string</td>
-                                            <td>Arrival time in ISO format</td>
-                                        </tr>
-                                        <tr>
-                                            <td>duration</td>
-                                            <td>number</td>
-                                            <td>Flight duration in minutes</td>
-                                        </tr>
-                                        <tr>
-                                            <td>stops</td>
-                                            <td>number</td>
-                                            <td>Number of stops</td>
-                                        </tr>
-                                        <tr>
-                                            <td>airline</td>
-                                            <td>string</td>
-                                            <td>Name of the airline</td>
-                                        </tr>
-                                        <tr>
-                                            <td>departureAirport</td>
-                                            <td>string</td>
-                                            <td>Name of the departure airport</td>
-                                        </tr>
-                                        <tr>
-                                            <td>arrivalAirport</td>
-                                            <td>string</td>
-                                            <td>Name of the arrival airport</td>
-                                        </tr>
-                                        </tbody>
-                                    </table>
-                                </div>
-                            </div>
-                        </div>
-                    </div>
+        <h3>FlightResult</h3>
+        <p>Representerar ett flygresultat.</p>
+        <table>
+            <tr>
+                <th>Fält</th>
+                <th>Typ</th>
+                <th>Beskrivning</th>
+            </tr>
+            <tr>
+                <td>price</td>
+                <td>number</td>
+                <td>Priset för flygresan</td>
+            </tr>
+            <tr>
+                <td>formattedPrice</td>
+                <td>string</td>
+                <td>Formaterat pris med valutasymbol</td>
+            </tr>
+            <tr>
+                <td>departureCity</td>
+                <td>string</td>
+                <td>Avresestad</td>
+            </tr>
+            <tr>
+                <td>arrivalCity</td>
+                <td>string</td>
+                <td>Ankomststad</td>
+            </tr>
+            <tr>
+                <td>departureTime</td>
+                <td>string</td>
+                <td>Avresetid</td>
+            </tr>
+            <tr>
+                <td>arrivalTime</td>
+                <td>string</td>
+                <td>Ankomsttid</td>
+            </tr>
+            <tr>
+                <td>duration</td>
+                <td>number</td>
+                <td>Flygtid i minuter</td>
+            </tr>
+            <tr>
+                <td>stops</td>
+                <td>number</td>
+                <td>Antal stopp</td>
+            </tr>
+            <tr>
+                <td>airline</td>
+                <td>string</td>
+                <td>Flygbolagets namn</td>
+            </tr>
+            <tr>
+                <td>departureAirport</td>
+                <td>string</td>
+                <td>Avreseflygplats</td>
+            </tr>
+            <tr>
+                <td>arrivalAirport</td>
+                <td>string</td>
+                <td>Ankomstflygplats</td>
+            </tr>
+        </table>
 
-                    <!-- WeatherData Model -->
-                    <div class="accordion-item">
-                        <h2 class="accordion-header" id="weatherDataHeading">
-                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#weatherDataCollapse" aria-expanded="false" aria-controls="weatherDataCollapse">
-                                <strong>WeatherData</strong> <span class="badge bg-primary ms-2">Response Model</span>
-                            </button>
-                        </h2>
-                        <div id="weatherDataCollapse" class="accordion-collapse collapse" aria-labelledby="weatherDataHeading" data-bs-parent="#modelsAccordion">
-                            <div class="accordion-body">
-                                <p>Represents weather forecast data for a location.</p>
-
-                                <div class="table-responsive">
-                                    <table class="table table-striped">
-                                        <thead>
-                                        <tr>
-                                            <th>Field</th>
-                                            <th>Type</th>
-                                            <th>Description</th>
-                                        </tr>
-                                        </thead>
-                                        <tbody>
-                                        <tr>
-                                            <td>timelines</td>
-                                            <td>object</td>
-                                            <td>Contains weather timelines</td>
-                                        </tr>
-                                        <tr>
-                                            <td>timelines.hourly</td>
-                                            <td>array</td>
-                                            <td>Hourly weather forecast data</td>
-                                        </tr>
-                                        <tr>
-                                            <td>timelines.hourly[].time</td>
-                                            <td>string</td>
-                                            <td>Timestamp for the forecast in ISO format</td>
-                                        </tr>
-                                        <tr>
-                                            <td>timelines.hourly[].values</td>
-                                            <td>object</td>
-                                            <td>Weather values for this time period</td>
-                                        </tr>
-                                        <tr>
-                                            <td>timelines.hourly[].values.temperature</td>
-                                            <td>number</td>
-                                            <td>Temperature in Celsius</td>
-                                        </tr>
-                                        <tr>
-                                            <td>timelines.hourly[].values.weatherCode</td>
-                                            <td>number</td>
-                                            <td>Code representing weather conditions</td>
-                                        </tr>
-                                        </tbody>
-                                    </table>
-                                </div>
+        <h3>WeatherData</h3>
+        <p>Representerar väderprognos för en plats.</p>
+        <table>
+            <tr>
+                <th>Fält</th>
+                <th>Typ</th>
+                <th>Beskrivning</th>
+            </tr>
+            <tr>
+                <td>timelines.hourly</td>
+                <td>array</td>
+                <td>Timvis väderprognos</td>
+            </tr>
+            <tr>
+                <td>timelines.hourly[].time</td>
+                <td>string</td>
+                <td>Tidpunkt för prognosen</td>
+            </tr>
+            <tr>
+                <td>timelines.hourly[].values.temperature</td>
+                <td>number</td>
+                <td>Temperatur i Celsius</td>
+            </tr>
+            <tr>
+                <td>timelines.hourly[].values.weatherCode</td>
+                <td>number</td>
+                <td>Kod för väderförhållanden</td>
+            </tr>
+        </table>
 
-                                <h4 class="mt-4">Weather Codes</h4>
-                                <div class="table-responsive">
-                                    <table class="table table-striped">
-                                        <thead>
-                                        <tr>
-                                            <th>Code</th>
-                                            <th>Description</th>
-                                        </tr>
-                                        </thead>
-                                        <tbody>
-                                        <tr>
-                                            <td>1000</td>
-                                            <td>Clear, Sunny</td>
-                                        </tr>
-                                        <tr>
-                                            <td>1100</td>
-                                            <td>Mostly Clear</td>
-                                        </tr>
-                                        <tr>
-                                            <td>1101</td>
-                                            <td>Partly Cloudy</td>
-                                        </tr>
-                                        <tr>
-                                            <td>1102</td>
-                                            <td>Mostly Cloudy</td>
-                                        </tr>
-                                        <tr>
-                                            <td>1001</td>
-                                            <td>Cloudy</td>
-                                        </tr>
-                                        <tr>
-                                            <td>4000, 4200</td>
-                                            <td>Light Rain, Drizzle</td>
-                                        </tr>
-                                        <tr>
-                                            <td>4001, 4201</td>
-                                            <td>Rain, Heavy Rain</td>
-                                        </tr>
-                                        <tr>
-                                            <td>5000, 5100</td>
-                                            <td>Snow, Light Snow</td>
-                                        </tr>
-                                        <tr>
-                                            <td>5101</td>
-                                            <td>Heavy Snow</td>
-                                        </tr>
-                                        <tr>
-                                            <td>8000</td>
-                                            <td>Thunderstorm</td>
-                                        </tr>
-                                        </tbody>
-                                    </table>
-                                </div>
-                            </div>
-                        </div>
-                    </div>
-                </div>
-            </div>
+        <h3>Attraction</h3>
+        <p>Representerar en sevärdhet eller intressant plats.</p>
+        <table>
+            <tr>
+                <th>Fält</th>
+                <th>Typ</th>
+                <th>Beskrivning</th>
+            </tr>
+            <tr>
+                <td>name</td>
+                <td>string</td>
+                <td>Namnet på sevärdheten</td>
+            </tr>
+            <tr>
+                <td>kinds</td>
+                <td>string</td>
+                <td>Kommaseparerad lista med kategorier (t.ex. "museum,cultural")</td>
+            </tr>
+            <tr>
+                <td>description</td>
+                <td>string</td>
+                <td>Beskrivning av sevärdheten (kan vara null)</td>
+            </tr>
+            <tr>
+                <td>latitude</td>
+                <td>number</td>
+                <td>Latitud för platsens position</td>
+            </tr>
+            <tr>
+                <td>longitude</td>
+                <td>number</td>
+                <td>Longitud för platsens position</td>
+            </tr>
+            <tr>
+                <td>imageUrl</td>
+                <td>string</td>
+                <td>URL till en bild av sevärdheten (kan vara null)</td>
+            </tr>
+        </table>
+    </div>
+
+    <div class="section">
+        <h2>Felhantering</h2>
+        <p>API:et returnerar följande HTTP-statuskoder:</p>
+        <table>
+            <tr>
+                <th>Statuskod</th>
+                <th>Beskrivning</th>
+            </tr>
+            <tr>
+                <td>200</td>
+                <td>OK - Förfrågan lyckades</td>
+            </tr>
+            <tr>
+                <td>400</td>
+                <td>Bad Request - Felaktiga parametrar</td>
+            </tr>
+            <tr>
+                <td>404</td>
+                <td>Not Found - Inga flyg eller sevärdheter hittades</td>
+            </tr>
+            <tr>
+                <td>500</td>
+                <td>Internal Server Error - Serverfel</td>
+            </tr>
+        </table>
+
+        <h3>Felmeddelanden</h3>
+        <p>När ett fel uppstår returnerar API:et ett JSON-objekt med information om felet:</p>
+        <pre>{
+  "error": "Felmeddelande"
+}</pre>
+
+        <p>För valideringsfel vid /search-endpointen kan svaret innehålla detaljerad information:</p>
+        <pre>{
+  "error": "Saknar obligatoriska parametrar",
+  "details": {
+    "from": "Avreseplats måste anges",
+    "destination": "Destination måste anges",
+    "departDate": "Avresedatum måste anges"
+  }
+}</pre>
+
+        <h3>Exempel på felsvar:</h3>
+        <pre>{
+  "error": "Inga flygdata hittades för den angivna rutten. Kontrollera stadsnamnen."
+}</pre>
 
-            <!-- Examples Tab -->
-            <div class="tab-pane fade" id="examples" role="tabpanel" aria-labelledby="examples-tab">
-                <div class="card">
-                    <div class="card-header">
-                        <h2 class="card-title">Example Requests and Responses</h2>
-                        <p class="card-subtitle text-muted">Sample API calls and their responses</p>
-                    </div>
-                    <div class="card-body">
-                        <h3>Example Request</h3>
-                        <pre><code>GET http://localhost:7000/search?from=Stockholm&destination=London&departDate=2023-12-25</code></pre>
+        <pre>{
+  "error": "Fel vid hämtning av attraktioner: Fel vid hämtning av koordinater. Statuskod: 404"
+}</pre>
+
+        <h3>Hantering av fel i klienten</h3>
+        <p>Exempel på hur man kan hantera fel i JavaScript:</p>
+        <pre>fetch('http://localhost:7000/search?from=Stockholm&destination=London&departDate=2025-03-08')
+  .then(response => {
+    if (!response.ok) {
+      return response.json().then(data => {
+        throw new Error(data.error || "Ett fel uppstod");
+      });
+    }
+    return response.json();
+  })
+  .then(data => {
+    // Hantera data
+    console.log(data);
+  })
+  .catch(error => {
+    // Visa felmeddelande för användaren
+    console.error("Error:", error);
+    document.getElementById('error-message').textContent = error.message;
+    document.getElementById('error-message').style.display = 'block';
+  });</pre>
+    </div>
+
+    <div class="section">
+        <h2>Exempel</h2>
 
-                        <h3 class="mt-4">Example Response</h3>
-                        <pre><code>{
+        <h3>Exempel på anrop för flygsökning:</h3>
+        <pre>GET http://localhost:7000/search?from=Stockholm&destination=London&departDate=2025-03-08</pre>
+
+        <h3>Exempel på svar för flygsökning:</h3>
+        <pre>{
   "flights": [
     {
       "price": 299.99,
       "formattedPrice": "$299.99",
       "departureCity": "Stockholm",
       "arrivalCity": "London",
-      "departureTime": "2023-12-25T08:30:00",
-      "arrivalTime": "2023-12-25T10:45:00",
+      "departureTime": "2025-03-08T08:30:00",
+      "arrivalTime": "2025-03-08T10:45:00",
       "duration": 135,
       "stops": 0,
       "airline": "SAS",
       "departureAirport": "Stockholm Arlanda Airport",
       "arrivalAirport": "London Heathrow Airport"
-    },
-    {
-      "price": 349.50,
-      "formattedPrice": "$349.50",
-      "departureCity": "Stockholm",
-      "arrivalCity": "London",
-      "departureTime": "2023-12-25T12:15:00",
-      "arrivalTime": "2023-12-25T14:30:00",
-      "duration": 135,
-      "stops": 0,
-      "airline": "British Airways",
-      "departureAirport": "Stockholm Arlanda Airport",
-      "arrivalAirport": "London Heathrow Airport"
     }
   ],
   "weather": {
     "timelines": {
       "hourly": [
         {
-          "time": "2023-12-25T00:00:00Z",
+          "time": "2025-03-08T00:00:00Z",
           "values": {
             "temperature": 5.2,
             "weatherCode": 1001
           }
-        },
-        {
-          "time": "2023-12-25T01:00:00Z",
-          "values": {
-            "temperature": 4.8,
-            "weatherCode": 1001
-          }
-        },
-        {
-          "time": "2023-12-25T02:00:00Z",
-          "values": {
-            "temperature": 4.5,
-            "weatherCode": 1101
-          }
         }
-        // Additional hourly forecasts...
       ]
     }
   }
-}</code></pre>
+}</pre>
 
-                        <h3 class="mt-4">Error Response Example</h3>
-                        <pre><code>{
-  "error": "Failed to search flights. Status code: 404",
-  "message": "No flights found for the specified route and date."
-}</code></pre>
+        <h3>Exempel på anrop för sevärdheter:</h3>
+        <pre>GET http://localhost:7000/attractions?city=London</pre>
 
-                        <h3 class="mt-4">Using the API with JavaScript</h3>
-                        <pre><code>// Example of how to call the API using JavaScript fetch
-async function searchFlightsAndWeather() {
-  const departureCity = "Stockholm";
-  const destinationCity = "London";
-  const departureDate = "2023-12-25";
+        <h3>Exempel på svar för sevärdheter:</h3>
+        <pre>[
+  {
+    "name": "British Museum",
+    "kinds": "museums,cultural",
+    "description": "The British Museum is a public museum dedicated to human history, art and culture located in London. Its permanent collection of eight million works is among the largest and most comprehensive in existence.",
+    "latitude": 51.5194,
+    "longitude": -0.1269,
+    "imageUrl": null
+  },
+  {
+    "name": "Tower of London",
+    "kinds": "historic,architecture,castles",
+    "description": "The Tower of London, officially Her Majesty's Royal Palace and Fortress of the Tower of London, is a historic castle on the north bank of the River Thames in central London.",
+    "latitude": 51.5081,
+    "longitude": -0.0759,
+    "imageUrl": null
+  }
+]</pre>
+
+        <h3>Exempel på JavaScript-kod för att anropa API:et:</h3>
+        <pre>// Exempel på hur man anropar flygsöknings-API:et med JavaScript
+async function searchFlights() {
+  const from = "Stockholm";
+  const destination = "London";
+  const departDate = "2025-03-08";
 
   try {
-    const url = `http://localhost:7000/search?from=${encodeURIComponent(departureCity)}&destination=${encodeURIComponent(destinationCity)}&departDate=${encodeURIComponent(departureDate)}`;
-
+    const url = `http://localhost:7000/search?from=${encodeURIComponent(from)}&destination=${encodeURIComponent(destination)}&departDate=${encodeURIComponent(departDate)}`;
     const response = await fetch(url);
+
     if (!response.ok) {
-      throw new Error("Network error: " + response.status);
+      const errorData = await response.json();
+      throw new Error(errorData.error || "Ett fel uppstod vid sökning");
     }
 
     const data = await response.json();
-    console.log("Flights:", data.flights);
-    console.log("Weather:", data.weather);
+    console.log("Flygresultat:", data.flights);
+    console.log("Väderprognos:", data.weather);
 
-    // Process the data...
+    // Visa resultaten på sidan
+    displayResults(data);
   } catch (error) {
-    console.error("Error calling API:", error);
+    console.error("Error:", error);
+    // Visa felmeddelande för användaren
+    displayError(error.message);
   }
-}</code></pre>
-                    </div>
-                </div>
-            </div>
-        </div>
-    </main>
+}
+
+// Exempel på hur man anropar sevärdhets-API:et med JavaScript
+async function fetchAttractions(city) {
+  try {
+    const url = `http://localhost:7000/attractions?city=${encodeURIComponent(city)}`;
+    const response = await fetch(url);
+
+    if (!response.ok) {
+      const errorData = await response.json();
+      throw new Error(errorData.error || "Kunde inte hämta sevärdheter");
+    }
+
+    const attractions = await response.json();
+    console.log("Sevärdheter:", attractions);
+
+    // Visa sevärdheter på sidan
+    displayAttractions(attractions);
+  } catch (error) {
+    console.error("Error:", error);
+    // Visa felmeddelande för användaren
+    displayError(error.message);
+  }
+}</pre>
+    </div>
 
-    <footer class="py-3 my-4">
-        <ul class="nav justify-content-center border-bottom pb-3 mb-3">
-            <li class="nav-item"><a href="faq.html" class="nav-link px-2 text-body-secondary">FAQs</a></li>
-            <li class="nav-item"><a href="about.html" class="nav-link px-2 text-body-secondary">About</a></li>
-        </ul>
-        <p class="text-center text-body-secondary">&copy; 2024 SkyExplorer, Inc</p>
+    <footer>
+        <p>SkyExplorer API Dokumentation | Senast uppdaterad: Mars 2025</p>
     </footer>
 </div>
-
-<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
-<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
 </body>
 </html>
\ No newline at end of file
Index: src/frontend/views/api-docs.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"sv\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>SkyExplorer API Dokumentation</title>\r\n    <link rel=\"stylesheet\" href=\"/src/frontend/style.css\">\r\n\r\n</head>\r\n<body>\r\n<div class=\"container\">\r\n    <h1>SkyExplorer API Dokumentation</h1>\r\n    <p>Detta är dokumentationen för SkyExplorer API:et som används för att söka flyg, väder och sevärdheter.</p>\r\n\r\n    <div class=\"section\">\r\n        <h2>Översikt</h2>\r\n        <p>\r\n            Vårt API låter dig söka efter flyg mellan olika platser, få väderinformation för destinationen,\r\n            samt hitta intressanta sevärdheter att besöka på din destination.\r\n        </p>\r\n        <p><strong>Bas-URL:</strong> <span class=\"endpoint\">http://localhost:7000</span></p>\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>Endpoints</h2>\r\n\r\n        <h3><span class=\"method get\">GET</span> <span class=\"endpoint\">/search</span></h3>\r\n        <p>Söker efter flyg och hämtar väderinformation för destinationen.</p>\r\n\r\n        <h4>Parametrar:</h4>\r\n        <table>\r\n            <tr>\r\n                <th>Parameter</th>\r\n                <th>Typ</th>\r\n                <th>Beskrivning</th>\r\n                <th>Obligatorisk</th>\r\n            </tr>\r\n            <tr>\r\n                <td>from</td>\r\n                <td>string</td>\r\n                <td>Avresestad eller flygplatskod</td>\r\n                <td><span class=\"required\">Ja</span></td>\r\n            </tr>\r\n            <tr>\r\n                <td>destination</td>\r\n                <td>string</td>\r\n                <td>Destinationsstad eller flygplatskod</td>\r\n                <td><span class=\"required\">Ja</span></td>\r\n            </tr>\r\n            <tr>\r\n                <td>departDate</td>\r\n                <td>string</td>\r\n                <td>Avresedatum i formatet ÅÅÅÅ-MM-DD</td>\r\n                <td><span class=\"required\">Ja</span></td>\r\n            </tr>\r\n            <tr>\r\n                <td>returnDate</td>\r\n                <td>string</td>\r\n                <td>Returresedatum i formatet ÅÅÅÅ-MM-DD</td>\r\n                <td><span class=\"optional\">Nej</span></td>\r\n            </tr>\r\n        </table>\r\n\r\n        <h4>Svar:</h4>\r\n        <p>API:et returnerar ett JSON-objekt med flygresultat och väderprognos.</p>\r\n\r\n        <h3><span class=\"method get\">GET</span> <span class=\"endpoint\">/attractions</span></h3>\r\n        <p>Hämtar sevärdheter och intressanta platser för en specifik destination.</p>\r\n\r\n        <h4>Parametrar:</h4>\r\n        <table>\r\n            <tr>\r\n                <th>Parameter</th>\r\n                <th>Typ</th>\r\n                <th>Beskrivning</th>\r\n                <th>Obligatorisk</th>\r\n            </tr>\r\n            <tr>\r\n                <td>city</td>\r\n                <td>string</td>\r\n                <td>Staden eller platsen att hitta sevärdheter för</td>\r\n                <td><span class=\"required\">Ja</span></td>\r\n            </tr>\r\n        </table>\r\n\r\n        <h4>Svar:</h4>\r\n        <p>API:et returnerar en array av sevärdheter med information som namn, beskrivning, kategori och plats.</p>\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>Datamodeller</h2>\r\n\r\n        <h3>FlightResult</h3>\r\n        <p>Representerar ett flygresultat.</p>\r\n        <table>\r\n            <tr>\r\n                <th>Fält</th>\r\n                <th>Typ</th>\r\n                <th>Beskrivning</th>\r\n            </tr>\r\n            <tr>\r\n                <td>price</td>\r\n                <td>number</td>\r\n                <td>Priset för flygresan</td>\r\n            </tr>\r\n            <tr>\r\n                <td>formattedPrice</td>\r\n                <td>string</td>\r\n                <td>Formaterat pris med valutasymbol</td>\r\n            </tr>\r\n            <tr>\r\n                <td>departureCity</td>\r\n                <td>string</td>\r\n                <td>Avresestad</td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrivalCity</td>\r\n                <td>string</td>\r\n                <td>Ankomststad</td>\r\n            </tr>\r\n            <tr>\r\n                <td>departureTime</td>\r\n                <td>string</td>\r\n                <td>Avresetid</td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrivalTime</td>\r\n                <td>string</td>\r\n                <td>Ankomsttid</td>\r\n            </tr>\r\n            <tr>\r\n                <td>duration</td>\r\n                <td>number</td>\r\n                <td>Flygtid i minuter</td>\r\n            </tr>\r\n            <tr>\r\n                <td>stops</td>\r\n                <td>number</td>\r\n                <td>Antal stopp</td>\r\n            </tr>\r\n            <tr>\r\n                <td>airline</td>\r\n                <td>string</td>\r\n                <td>Flygbolagets namn</td>\r\n            </tr>\r\n            <tr>\r\n                <td>departureAirport</td>\r\n                <td>string</td>\r\n                <td>Avreseflygplats</td>\r\n            </tr>\r\n            <tr>\r\n                <td>arrivalAirport</td>\r\n                <td>string</td>\r\n                <td>Ankomstflygplats</td>\r\n            </tr>\r\n        </table>\r\n\r\n        <h3>WeatherData</h3>\r\n        <p>Representerar väderprognos för en plats.</p>\r\n        <table>\r\n            <tr>\r\n                <th>Fält</th>\r\n                <th>Typ</th>\r\n                <th>Beskrivning</th>\r\n            </tr>\r\n            <tr>\r\n                <td>timelines.hourly</td>\r\n                <td>array</td>\r\n                <td>Timvis väderprognos</td>\r\n            </tr>\r\n            <tr>\r\n                <td>timelines.hourly[].time</td>\r\n                <td>string</td>\r\n                <td>Tidpunkt för prognosen</td>\r\n            </tr>\r\n            <tr>\r\n                <td>timelines.hourly[].values.temperature</td>\r\n                <td>number</td>\r\n                <td>Temperatur i Celsius</td>\r\n            </tr>\r\n            <tr>\r\n                <td>timelines.hourly[].values.weatherCode</td>\r\n                <td>number</td>\r\n                <td>Kod för väderförhållanden</td>\r\n            </tr>\r\n        </table>\r\n\r\n        <h3>Attraction</h3>\r\n        <p>Representerar en sevärdhet eller intressant plats.</p>\r\n        <table>\r\n            <tr>\r\n                <th>Fält</th>\r\n                <th>Typ</th>\r\n                <th>Beskrivning</th>\r\n            </tr>\r\n            <tr>\r\n                <td>name</td>\r\n                <td>string</td>\r\n                <td>Namnet på sevärdheten</td>\r\n            </tr>\r\n            <tr>\r\n                <td>kinds</td>\r\n                <td>string</td>\r\n                <td>Kommaseparerad lista med kategorier (t.ex. \"museum,cultural\")</td>\r\n            </tr>\r\n            <tr>\r\n                <td>description</td>\r\n                <td>string</td>\r\n                <td>Beskrivning av sevärdheten (kan vara null)</td>\r\n            </tr>\r\n            <tr>\r\n                <td>latitude</td>\r\n                <td>number</td>\r\n                <td>Latitud för platsens position</td>\r\n            </tr>\r\n            <tr>\r\n                <td>longitude</td>\r\n                <td>number</td>\r\n                <td>Longitud för platsens position</td>\r\n            </tr>\r\n            <tr>\r\n                <td>imageUrl</td>\r\n                <td>string</td>\r\n                <td>URL till en bild av sevärdheten (kan vara null)</td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>Felhantering</h2>\r\n        <p>API:et returnerar följande HTTP-statuskoder:</p>\r\n        <table>\r\n            <tr>\r\n                <th>Statuskod</th>\r\n                <th>Beskrivning</th>\r\n            </tr>\r\n            <tr>\r\n                <td>200</td>\r\n                <td>OK - Förfrågan lyckades</td>\r\n            </tr>\r\n            <tr>\r\n                <td>400</td>\r\n                <td>Bad Request - Felaktiga parametrar</td>\r\n            </tr>\r\n            <tr>\r\n                <td>404</td>\r\n                <td>Not Found - Inga flyg eller sevärdheter hittades</td>\r\n            </tr>\r\n            <tr>\r\n                <td>500</td>\r\n                <td>Internal Server Error - Serverfel</td>\r\n            </tr>\r\n        </table>\r\n\r\n        <h3>Felmeddelanden</h3>\r\n        <p>När ett fel uppstår returnerar API:et ett JSON-objekt med information om felet:</p>\r\n        <pre>{\r\n  \"error\": \"Felmeddelande\"\r\n}</pre>\r\n\r\n        <p>För valideringsfel vid /search-endpointen kan svaret innehålla detaljerad information:</p>\r\n        <pre>{\r\n  \"error\": \"Saknar obligatoriska parametrar\",\r\n  \"details\": {\r\n    \"from\": \"Avreseplats måste anges\",\r\n    \"destination\": \"Destination måste anges\",\r\n    \"departDate\": \"Avresedatum måste anges\"\r\n  }\r\n}</pre>\r\n\r\n        <h3>Exempel på felsvar:</h3>\r\n        <pre>{\r\n  \"error\": \"Inga flygdata hittades för den angivna rutten. Kontrollera stadsnamnen.\"\r\n}</pre>\r\n\r\n        <pre>{\r\n  \"error\": \"Fel vid hämtning av attraktioner: Fel vid hämtning av koordinater. Statuskod: 404\"\r\n}</pre>\r\n\r\n        <h3>Hantering av fel i klienten</h3>\r\n        <p>Exempel på hur man kan hantera fel i JavaScript:</p>\r\n        <pre>fetch('http://localhost:7000/search?from=Stockholm&destination=London&departDate=2023-12-25')\r\n  .then(response => {\r\n    if (!response.ok) {\r\n      return response.json().then(data => {\r\n        throw new Error(data.error || \"Ett fel uppstod\");\r\n      });\r\n    }\r\n    return response.json();\r\n  })\r\n  .then(data => {\r\n    // Hantera data\r\n    console.log(data);\r\n  })\r\n  .catch(error => {\r\n    // Visa felmeddelande för användaren\r\n    console.error(\"Error:\", error);\r\n    document.getElementById('error-message').textContent = error.message;\r\n    document.getElementById('error-message').style.display = 'block';\r\n  });</pre>\r\n    </div>\r\n\r\n    <div class=\"section\">\r\n        <h2>Exempel</h2>\r\n\r\n        <h3>Exempel på anrop för flygsökning:</h3>\r\n        <pre>GET http://localhost:7000/search?from=Stockholm&destination=London&departDate=2023-12-25</pre>\r\n\r\n        <h3>Exempel på svar för flygsökning:</h3>\r\n        <pre>{\r\n  \"flights\": [\r\n    {\r\n      \"price\": 299.99,\r\n      \"formattedPrice\": \"$299.99\",\r\n      \"departureCity\": \"Stockholm\",\r\n      \"arrivalCity\": \"London\",\r\n      \"departureTime\": \"2023-12-25T08:30:00\",\r\n      \"arrivalTime\": \"2023-12-25T10:45:00\",\r\n      \"duration\": 135,\r\n      \"stops\": 0,\r\n      \"airline\": \"SAS\",\r\n      \"departureAirport\": \"Stockholm Arlanda Airport\",\r\n      \"arrivalAirport\": \"London Heathrow Airport\"\r\n    }\r\n  ],\r\n  \"weather\": {\r\n    \"timelines\": {\r\n      \"hourly\": [\r\n        {\r\n          \"time\": \"2023-12-25T00:00:00Z\",\r\n          \"values\": {\r\n            \"temperature\": 5.2,\r\n            \"weatherCode\": 1001\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}</pre>\r\n\r\n        <h3>Exempel på anrop för sevärdheter:</h3>\r\n        <pre>GET http://localhost:7000/attractions?city=London</pre>\r\n\r\n        <h3>Exempel på svar för sevärdheter:</h3>\r\n        <pre>[\r\n  {\r\n    \"name\": \"British Museum\",\r\n    \"kinds\": \"museums,cultural\",\r\n    \"description\": \"The British Museum is a public museum dedicated to human history, art and culture located in London. Its permanent collection of eight million works is among the largest and most comprehensive in existence.\",\r\n    \"latitude\": 51.5194,\r\n    \"longitude\": -0.1269,\r\n    \"imageUrl\": null\r\n  },\r\n  {\r\n    \"name\": \"Tower of London\",\r\n    \"kinds\": \"historic,architecture,castles\",\r\n    \"description\": \"The Tower of London, officially Her Majesty's Royal Palace and Fortress of the Tower of London, is a historic castle on the north bank of the River Thames in central London.\",\r\n    \"latitude\": 51.5081,\r\n    \"longitude\": -0.0759,\r\n    \"imageUrl\": null\r\n  }\r\n]</pre>\r\n\r\n        <h3>Exempel på JavaScript-kod för att anropa API:et:</h3>\r\n        <pre>// Exempel på hur man anropar flygsöknings-API:et med JavaScript\r\nasync function searchFlights() {\r\n  const from = \"Stockholm\";\r\n  const destination = \"London\";\r\n  const departDate = \"2023-12-25\";\r\n\r\n  try {\r\n    const url = `http://localhost:7000/search?from=${encodeURIComponent(from)}&destination=${encodeURIComponent(destination)}&departDate=${encodeURIComponent(departDate)}`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || \"Ett fel uppstod vid sökning\");\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log(\"Flygresultat:\", data.flights);\r\n    console.log(\"Väderprognos:\", data.weather);\r\n\r\n    // Visa resultaten på sidan\r\n    displayResults(data);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    // Visa felmeddelande för användaren\r\n    displayError(error.message);\r\n  }\r\n}\r\n\r\n// Exempel på hur man anropar sevärdhets-API:et med JavaScript\r\nasync function fetchAttractions(city) {\r\n  try {\r\n    const url = `http://localhost:7000/attractions?city=${encodeURIComponent(city)}`;\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n      const errorData = await response.json();\r\n      throw new Error(errorData.error || \"Kunde inte hämta sevärdheter\");\r\n    }\r\n\r\n    const attractions = await response.json();\r\n    console.log(\"Sevärdheter:\", attractions);\r\n\r\n    // Visa sevärdheter på sidan\r\n    displayAttractions(attractions);\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    // Visa felmeddelande för användaren\r\n    displayError(error.message);\r\n  }\r\n}</pre>\r\n    </div>\r\n\r\n    <footer>\r\n        <p>SkyExplorer API Dokumentation | Senast uppdaterad: Mars 2024</p>\r\n    </footer>\r\n</div>\r\n</body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/frontend/views/api-docs.html b/src/frontend/views/api-docs.html
--- a/src/frontend/views/api-docs.html	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/frontend/views/api-docs.html	(date 1741453153652)
@@ -9,6 +9,7 @@
 <body>
 <div class="container">
     <h1>SkyExplorer API Dokumentation</h1>
+    <a href="index.html" class="tillbakaKnapp">Tillbaka till huvudmenyn</a>
     <p>Detta är dokumentationen för SkyExplorer API:et som används för att söka flyg, väder och sevärdheter.</p>
 
     <div class="section">
@@ -278,7 +279,7 @@
 
         <h3>Hantering av fel i klienten</h3>
         <p>Exempel på hur man kan hantera fel i JavaScript:</p>
-        <pre>fetch('http://localhost:7000/search?from=Stockholm&destination=London&departDate=2023-12-25')
+        <pre>fetch('http://localhost:7000/search?from=Stockholm&destination=London&departDate=2025-03-08')
   .then(response => {
     if (!response.ok) {
       return response.json().then(data => {
@@ -303,7 +304,7 @@
         <h2>Exempel</h2>
 
         <h3>Exempel på anrop för flygsökning:</h3>
-        <pre>GET http://localhost:7000/search?from=Stockholm&destination=London&departDate=2023-12-25</pre>
+        <pre>GET http://localhost:7000/search?from=Stockholm&destination=London&departDate=2025-03-08</pre>
 
         <h3>Exempel på svar för flygsökning:</h3>
         <pre>{
@@ -313,8 +314,8 @@
       "formattedPrice": "$299.99",
       "departureCity": "Stockholm",
       "arrivalCity": "London",
-      "departureTime": "2023-12-25T08:30:00",
-      "arrivalTime": "2023-12-25T10:45:00",
+      "departureTime": "2025-03-08T08:30:00",
+      "arrivalTime": "2025-03-08T10:45:00",
       "duration": 135,
       "stops": 0,
       "airline": "SAS",
@@ -326,7 +327,7 @@
     "timelines": {
       "hourly": [
         {
-          "time": "2023-12-25T00:00:00Z",
+          "time": "2025-03-08T00:00:00Z",
           "values": {
             "temperature": 5.2,
             "weatherCode": 1001
@@ -365,7 +366,7 @@
 async function searchFlights() {
   const from = "Stockholm";
   const destination = "London";
-  const departDate = "2023-12-25";
+  const departDate = "2025-03-08";
 
   try {
     const url = `http://localhost:7000/search?from=${encodeURIComponent(from)}&destination=${encodeURIComponent(destination)}&departDate=${encodeURIComponent(departDate)}`;
@@ -414,7 +415,7 @@
     </div>
 
     <footer>
-        <p>SkyExplorer API Dokumentation | Senast uppdaterad: Mars 2024</p>
+        <p>SkyExplorer API Dokumentation | Senast uppdaterad: Mars 2025</p>
     </footer>
 </div>
 </body>
Index: src/frontend/views/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"sv\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <title>SkyExplorer</title>\r\n        <link rel=\"stylesheet\" href=\"/src/frontend/style.css\">\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css\" rel=\"stylesheet\">\r\n    </head>\r\n    <body>\r\n        <div id=\"container\">\r\n            <header>\r\n                <div class=\"container\">\r\n                    <header class=\"d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4 border-bottom\">\r\n                        <div class=\"col-md-3 mb-2 mb-md-0\">\r\n                            <a href=\"index.html\" class=\"d-inline-flex link-body-emphasis text-decoration-none\">\r\n                                <img src=\"/src/frontend/images/logo.jpeg\" alt=\"Logo\" width=\"100\" height=\"100\" class=\"d-block\">\r\n                            </a>\r\n                        </div>\r\n                      <ul class=\"nav col-12 col-md-auto mb-2 justify-content-center mb-md-0\">\r\n                          <li><a href=\"index.html\" class=\"nav-link px-2 link-secondary\">Home</a></li>\r\n                          <li><a href=\"api-docs.html\" class=\"nav-link px-2\">API Docs</a></li>\r\n                          <li><a href=\"faq.html\" class=\"nav-link px-2\">FAQs</a></li>\r\n                          <li><a href=\"about.html\" class=\"nav-link px-2\">About</a></li>\r\n                      </ul>\r\n                    </header>\r\n                  </div>\r\n            </header>\r\n            <main>\r\n              <div class=\"search-field\">\r\n                <div class=\"search-bars\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-12 col-md-8 col-lg-6\">\r\n                            <div class=\"d-flex justify-content-between gap-3\">\r\n                                <div class=\"search-container position-relative\">\r\n                                    <label for=\"departure-search\" class=\"form-label\">Departure</label>\r\n                                    <form class=\"d-flex align-items-center\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                            class=\"search-icon feather feather-search\">\r\n                                            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                                            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                                        </svg>\r\n                                        <input id=\"departure-search\" class=\"form-control search-input ps-5\" type=\"search\"\r\n                                            placeholder=\"City or Airport\" aria-label=\"Departure Search\">\r\n                                    </form>\r\n                                </div>\r\n                                <div class=\"search-container position-relative\">\r\n                                    <label for=\"destination-search\" class=\"form-label\">Destination</label>\r\n                                    <form class=\"d-flex align-items-center\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                            class=\"search-icon feather feather-search\">\r\n                                            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                                            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                                        </svg>\r\n                                        <input id=\"destination-search\" class=\"form-control search-input ps-5\" type=\"search\"\r\n                                            placeholder=\"Where are you heading?\" aria-label=\"Destination Search\">\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"date-pickers\">\r\n                  <div class=\"date-pickers d-flex justify-content-center gap-3 mt-4\">\r\n                    <div class=\"date-picker-container\">\r\n                      <label for=\"departure-date\" class=\"form-label\">Departure Date</label>\r\n                      <div class=\"input-group\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"departure-date\" placeholder=\"Select departure date\">\r\n                      </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button id=\"search-flights\" class=\"btn btn-primary mt-3\">Search Flights</button>\r\n              </div>\r\n                <div class=\"cards\">\r\n                    <div class=\"album py-5 bg-body-tertiary\">\r\n                        <div class=\"container\">\r\n                          <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                            <div class=\"col\">\r\n                              <div class=\"card shadow-sm\">\r\n                                <img src=\"/src/frontend/images/Flight.jpg\" class=\"card-img-top\" alt=\"Destination Flight\">\r\n                                <div class=\"card-body\">\r\n                                  <p class=\"card-text\">SkyExplorer helps you find your next flight to your next destination</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                              <div class=\"card shadow-sm\">\r\n                                <img src=\"/src/frontend/images/whether.jpg\" class=\"card-img-top\" alt=\"Whether\">\r\n                                <div class=\"card-body\">\r\n                                  <p class=\"card-text\">SkyExpolorer tells you the whether of your next destination</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                              <div class=\"card shadow-sm\">\r\n                                <img src=\"/src/frontend/images/attractions.jpg\" class=\"card-img-top\" alt=\"attractions\">\r\n                                <div class=\"card-body\">\r\n                                  <p class=\"card-text\">SkyExplorer tells you the best things to do in your next destination</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </main>\r\n            <footer>\r\n                <div class=\"container\">\r\n                    <footer class=\"py-3 my-4\">\r\n                      <ul class=\"nav justify-content-center border-bottom pb-3 mb-3\">\r\n                          <li><a href=\"index.html\" class=\"nav-link px-2 link-secondary\">Home</a></li>\r\n                          <li><a href=\"api-docs.html\" class=\"nav-link px-2\">API Docs</a></li>\r\n                          <li><a href=\"faq.html\" class=\"nav-link px-2\">FAQs</a></li>\r\n                          <li><a href=\"about.html\" class=\"nav-link px-2\">About</a></li>\r\n                      </ul>\r\n                      <p class=\"text-center text-body-secondary\">&copy; 2024 SkyExplorer, Inc</p>\r\n                    </footer>\r\n                  </div>\r\n            </footer>\r\n        </div>\r\n        <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js\"></script>\r\n        <script src=\"/src/frontend/script.js\"></script>\r\n    </body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/frontend/views/index.html b/src/frontend/views/index.html
--- a/src/frontend/views/index.html	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/frontend/views/index.html	(date 1741451338341)
@@ -92,7 +92,7 @@
                               <div class="card shadow-sm">
                                 <img src="/src/frontend/images/whether.jpg" class="card-img-top" alt="Whether">
                                 <div class="card-body">
-                                  <p class="card-text">SkyExpolorer tells you the whether of your next destination</p>
+                                  <p class="card-text">SkyExpolorer tells you the weather of your next destination</p>
                                 </div>
                               </div>
                             </div>
Index: src/service/dto/Leg.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/Leg.java b/src/model/dto/Leg.java
rename from src/service/dto/Leg.java
rename to src/model/dto/Leg.java
--- a/src/service/dto/Leg.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/Leg.java	(date 1741518938305)
@@ -1,7 +1,4 @@
-package service.dto;
-
-import java.util.List;
-
+package model.dto;
 
 
 /**
Index: target/classes/frontend/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.d-block:hover{\r\n    filter: brightness(0.8);\r\n    transform: scale(1.05);\r\n    transition: all 0.3s ease;\r\n}\r\n.search-container {\r\n    background-color: white;\r\n    border-radius: 50px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n    padding: 10px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    transition: all 0.3s ease;\r\n}\r\n.form-control.search-input {\r\n    border: none;\r\n    background: transparent;\r\n    padding-left: 20px;\r\n    font-size: 1rem;\r\n    height: 50px;\r\n}\r\n.search-icon {\r\n    color: #6c757d;\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 65%;\r\n    transform: translateY(-50%);\r\n}\r\n.search-container {\r\n    max-width: 400px; \r\n    flex-grow: 1;\r\n}\r\n.search-container .btn-search:hover {\r\n    background-color: #b5b5b5;\r\n    transition: background-color 0.5s ease;\r\n}\r\n.form-label {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n    display: block;\r\n    text-align: center;\r\n}\r\n.date-pickers {\r\n    margin-top: 20px;\r\n}\r\n\r\n.date-picker-container {\r\n    position: relative;\r\n    margin-bottom: 20px;\r\n    flex: 1;\r\n    max-width: 300px;\r\n    background-color: white;\r\n    border-radius: 50px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n}\r\n.date-picker-container .dropdown {\r\n    position: absolute; \r\n    background-color: white;\r\n    border-radius: 50px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n    padding: 10px;\r\n}\r\n.card-img-top{\r\n    height: 300px;\r\n    width: 100%;\r\n    object-fit: cover;\r\n}\r\n.card-img-top:hover {\r\n    filter: brightness(0.8);\r\n    transform: scale(1.05);\r\n    transition: all 0.3s ease;\r\n}\r\n.cards{\r\n    margin-top: 75px;\r\n}\r\n#search-flights {\r\n    display: block;\r\n    margin: 15px auto;\r\n    padding: 12px 24px;\r\n    font-size: 18px;\r\n    background-color: #b5b5b5;\r\n    border: none;\r\n    transition: background 0.3s ease-in-out;\r\n}\r\n\r\n#search-flights:hover {\r\n    background-color: #979797;\r\n}\r\n\r\n\r\n.weather-card {\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n.weather-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 15px rgba(0,0,0,0.1);\r\n}\r\n\r\n.search-field {\r\n  background-color: #f8f9fa;\r\n  padding: 2rem;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n}\r\n.search-icon {\r\n  position: absolute;\r\n  left: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  z-index: 10;\r\n}\r\n.search-input {\r\n  padding-left: 40px !important;\r\n}\r\n.flight-card {\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.flight-card:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);\r\n  z-index: 10;\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/frontend/style.css b/target/classes/frontend/style.css
--- a/target/classes/frontend/style.css	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/target/classes/frontend/style.css	(date 1741453291259)
@@ -3,6 +3,18 @@
     transform: scale(1.05);
     transition: all 0.3s ease;
 }
+
+.tillbakaKnapp{
+    display: inline-block;
+    background-color: #007bff;
+    color: white;
+    padding: 10px 20px;
+    border-radius: 5px;
+    text-decoration: none;
+    font-size: 16px;
+    font-weight: bold;
+    transition: background-color 0.3s,transform 0.2s;
+}
 .search-container {
     background-color: white;
     border-radius: 50px;
@@ -129,4 +141,245 @@
 }
 
 
+/* För attractions */
+
+body {
+    font-family: 'Roboto', Arial, sans-serif;
+    margin: 20px;
+    background-color: #f8f9fa;
+    color: #333;
+    line-height: 1.6;
+}
+
+h1 {
+    color: #2c3e50;
+    font-size: 2.5rem;
+    margin-bottom: 0.5rem;
+    font-weight: 700;
+}
+
+h2 {
+    color: #3498db;
+    font-size: 1.8rem;
+    margin-bottom: 0.8rem;
+    font-weight: 600;
+}
+
+p {
+    font-size: 1.1rem;
+    margin-bottom: 1.2rem;
+}
+
+.attraction-item {
+    margin-bottom: 25px;
+    padding: 20px;
+    border: 1px solid #e0e0e0;
+    border-radius: 10px;
+    background-color: white;
+    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
+    transition: transform 0.2s, box-shadow 0.2s;
+}
+
+.attraction-item:hover {
+    transform: translateY(-5px);
+    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
+}
+
+.attraction-image {
+    max-width: 100%;
+    height: auto;
+    margin-bottom: 15px;
+    border-radius: 5px;
+}
+
+.map-link {
+    color: #3498db;
+    text-decoration: none;
+    font-weight: 500;
+    display: inline-block;
+    padding: 5px 0;
+    border-bottom: 2px solid transparent;
+    transition: border-color 0.2s;
+}
+
+.map-link:hover {
+    border-bottom-color: #3498db;
+}
+
+.category {
+    display: inline-block;
+    background-color: #e9f7fe;
+    color: #3498db;
+    padding: 5px 10px;
+    margin-right: 8px;
+    margin-bottom: 10px;
+    border-radius: 5px;
+    font-size: 0.9rem;
+    font-weight: 500;
+}
+
+#loading {
+    font-size: 1.2rem;
+    text-align: center;
+    padding: 20px;
+}
+
+#error-message {
+    background-color: #ffe9e9;
+    color: #e74c3c;
+    padding: 15px;
+    border-radius: 5px;
+    font-weight: 500;
+    margin-bottom: 20px;
+}
+
+a {
+    color: #3498db;
+    text-decoration: none;
+    font-weight: 500;
+}
+
+a:hover {
+    text-decoration: underline;
+}
+
+.intro-text {
+    font-size: 1.3rem;
+    color: #555;
+    margin-bottom: 25px;
+}
+
+.section {
+    margin-bottom: 30px;
+    padding: 20px;
+    border: 1px solid #ddd;
+    border-radius: 8px;
+    background-color: #fff;
+    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
+}
+
+.method {
+    display: inline-block;
+    padding: 5px 10px;
+    border-radius: 4px;
+    color: white;
+    font-weight: bold;
+    margin-right: 10px;
+}
+
+.get {
+    background-color: #3498db;
+}
+
+.endpoint {
+    font-family: monospace;
+    background-color: #f8f9fa;
+    padding: 5px;
+    border-radius: 4px;
+    border: 1px solid #e9ecef;
+}
+
+.required {
+    color: #e74c3c;
+    font-weight: bold;
+}
+
+.optional {
+    color: #7f8c8d;
+}
+
+
+/* Stilar för API-dokumentation */
+.section {
+    margin-bottom: 30px;
+    padding: 20px;
+    border: 1px solid #ddd;
+    border-radius: 8px;
+    background-color: #fff;
+    box-shadow: 0 2px 4px rgba(0,0,0,0.05);
+}
+
+h1 {
+    color: #2c3e50;
+    margin-bottom: 20px;
+}
+
+h2 {
+    color: #3498db;
+    border-bottom: 2px solid #f0f0f0;
+    padding-bottom: 10px;
+    margin-bottom: 15px;
+}
+
+h3 {
+    color: #2c3e50;
+    margin-top: 20px;
+    margin-bottom: 15px;
+}
+
+pre {
+    background-color: #f8f9fa;
+    padding: 15px;
+    border-radius: 5px;
+    overflow-x: auto;
+    border: 1px solid #e9ecef;
+}
+
+table {
+    width: 100%;
+    border-collapse: collapse;
+    margin-bottom: 20px;
+}
 
+th, td {
+    border: 1px solid #ddd;
+    padding: 12px;
+    text-align: left;
+}
+
+th {
+    background-color: #f2f2f2;
+    font-weight: 600;
+}
+
+tr:nth-child(even) {
+    background-color: #f8f9fa;
+}
+
+.method {
+    display: inline-block;
+    padding: 5px 10px;
+    border-radius: 4px;
+    color: white;
+    font-weight: bold;
+    margin-right: 10px;
+}
+
+.get {
+    background-color: #3498db;
+}
+
+.endpoint {
+    font-family: monospace;
+    background-color: #f8f9fa;
+    padding: 5px;
+    border-radius: 4px;
+    border: 1px solid #e9ecef;
+}
+
+.required {
+    color: #e74c3c;
+    font-weight: bold;
+}
+
+.optional {
+    color: #7f8c8d;
+}
+
+footer {
+    margin-top: 40px;
+    padding-top: 20px;
+    border-top: 1px solid #ddd;
+    text-align: center;
+    color: #7f8c8d;
+}
\ No newline at end of file
Index: target/classes/frontend/views/index.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"sv\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <title>SkyExplorer</title>\r\n        <link rel=\"stylesheet\" href=\"/src/frontend/style.css\">\r\n        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css\" rel=\"stylesheet\">\r\n    </head>\r\n    <body>\r\n        <div id=\"container\">\r\n            <header>\r\n                <div class=\"container\">\r\n                    <header class=\"d-flex flex-wrap align-items-center justify-content-center justify-content-md-between py-3 mb-4 border-bottom\">\r\n                        <div class=\"col-md-3 mb-2 mb-md-0\">\r\n                            <a href=\"index.html\" class=\"d-inline-flex link-body-emphasis text-decoration-none\">\r\n                                <img src=\"/src/frontend/images/logo.jpeg\" alt=\"Logo\" width=\"100\" height=\"100\" class=\"d-block\">\r\n                            </a>\r\n                        </div>\r\n                      <ul class=\"nav col-12 col-md-auto mb-2 justify-content-center mb-md-0\">\r\n                          <li><a href=\"index.html\" class=\"nav-link px-2 link-secondary\">Home</a></li>\r\n                          <li><a href=\"api-docs.html\" class=\"nav-link px-2\">API Docs</a></li>\r\n                          <li><a href=\"faq.html\" class=\"nav-link px-2\">FAQs</a></li>\r\n                          <li><a href=\"about.html\" class=\"nav-link px-2\">About</a></li>\r\n                      </ul>\r\n                    </header>\r\n                  </div>\r\n            </header>\r\n            <main>\r\n              <div class=\"search-field\">\r\n                <div class=\"search-bars\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-12 col-md-8 col-lg-6\">\r\n                            <div class=\"d-flex justify-content-between gap-3\">\r\n                                <div class=\"search-container position-relative\">\r\n                                    <label for=\"departure-search\" class=\"form-label\">Departure</label>\r\n                                    <form class=\"d-flex align-items-center\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                            class=\"search-icon feather feather-search\">\r\n                                            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                                            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                                        </svg>\r\n                                        <input id=\"departure-search\" class=\"form-control search-input ps-5\" type=\"search\"\r\n                                            placeholder=\"City or Airport\" aria-label=\"Departure Search\">\r\n                                    </form>\r\n                                </div>\r\n                                <div class=\"search-container position-relative\">\r\n                                    <label for=\"destination-search\" class=\"form-label\">Destination</label>\r\n                                    <form class=\"d-flex align-items-center\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\r\n                                            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\r\n                                            class=\"search-icon feather feather-search\">\r\n                                            <circle cx=\"11\" cy=\"11\" r=\"8\"></circle>\r\n                                            <line x1=\"21\" y1=\"21\" x2=\"16.65\" y2=\"16.65\"></line>\r\n                                        </svg>\r\n                                        <input id=\"destination-search\" class=\"form-control search-input ps-5\" type=\"search\"\r\n                                            placeholder=\"Where are you heading?\" aria-label=\"Destination Search\">\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"date-pickers\">\r\n                  <div class=\"date-pickers d-flex justify-content-center gap-3 mt-4\">\r\n                    <div class=\"date-picker-container\">\r\n                      <label for=\"departure-date\" class=\"form-label\">Departure Date</label>\r\n                      <div class=\"input-group\">\r\n                          <input type=\"text\" class=\"form-control\" id=\"departure-date\" placeholder=\"Select departure date\">\r\n                      </div>\r\n                    </div>\r\n\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <button id=\"search-flights\" class=\"btn btn-primary mt-3\">Search Flights</button>\r\n              </div>\r\n                <div class=\"cards\">\r\n                    <div class=\"album py-5 bg-body-tertiary\">\r\n                        <div class=\"container\">\r\n                          <div class=\"row row-cols-1 row-cols-sm-2 row-cols-md-3 g-3\">\r\n                            <div class=\"col\">\r\n                              <div class=\"card shadow-sm\">\r\n                                <img src=\"/src/frontend/images/Flight.jpg\" class=\"card-img-top\" alt=\"Destination Flight\">\r\n                                <div class=\"card-body\">\r\n                                  <p class=\"card-text\">SkyExplorer helps you find your next flight to your next destination</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                              <div class=\"card shadow-sm\">\r\n                                <img src=\"/src/frontend/images/whether.jpg\" class=\"card-img-top\" alt=\"Whether\">\r\n                                <div class=\"card-body\">\r\n                                  <p class=\"card-text\">SkyExpolorer tells you the whether of your next destination</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                              <div class=\"card shadow-sm\">\r\n                                <img src=\"/src/frontend/images/attractions.jpg\" class=\"card-img-top\" alt=\"attractions\">\r\n                                <div class=\"card-body\">\r\n                                  <p class=\"card-text\">SkyExplorer tells you the best things to do in your next destination</p>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </main>\r\n            <footer>\r\n                <div class=\"container\">\r\n                    <footer class=\"py-3 my-4\">\r\n                      <ul class=\"nav justify-content-center border-bottom pb-3 mb-3\">\r\n                          <li><a href=\"index.html\" class=\"nav-link px-2 link-secondary\">Home</a></li>\r\n                          <li><a href=\"api-docs.html\" class=\"nav-link px-2\">API Docs</a></li>\r\n                          <li><a href=\"faq.html\" class=\"nav-link px-2\">FAQs</a></li>\r\n                          <li><a href=\"about.html\" class=\"nav-link px-2\">About</a></li>\r\n                      </ul>\r\n                      <p class=\"text-center text-body-secondary\">&copy; 2024 SkyExplorer, Inc</p>\r\n                    </footer>\r\n                  </div>\r\n            </footer>\r\n        </div>\r\n        <script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n        <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js\"></script>\r\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js\"></script>\r\n        <script src=\"/src/frontend/script.js\"></script>\r\n    </body>\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/target/classes/frontend/views/index.html b/target/classes/frontend/views/index.html
--- a/target/classes/frontend/views/index.html	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/target/classes/frontend/views/index.html	(date 1741451338341)
@@ -92,7 +92,7 @@
                               <div class="card shadow-sm">
                                 <img src="/src/frontend/images/whether.jpg" class="card-img-top" alt="Whether">
                                 <div class="card-body">
-                                  <p class="card-text">SkyExpolorer tells you the whether of your next destination</p>
+                                  <p class="card-text">SkyExpolorer tells you the weather of your next destination</p>
                                 </div>
                               </div>
                             </div>
Index: src/controller/WeatherController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport io.javalin.Javalin;\r\nimport service.WeatherService;\r\n\r\npublic class WeatherController {\r\n\r\n    private static WeatherService ws = new WeatherService();\r\n\r\n\r\n    public static void registerRoutes(Javalin app) {\r\n        app.get(\"/weather\",context -> {\r\n            String location = context.queryParam(\"location\");\r\n            if (location == null || location.isEmpty()){\r\n                context.status(400).result(\"{\\\"error\\\":\\\"Saknar parameter location\\\"}\");\r\n            }else{\r\n                String weatherData = ws.getWeatherData(location);\r\n                context.result(weatherData);\r\n            }\r\n        });\r\n\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/controller/WeatherController.java b/src/controller/WeatherController.java
--- a/src/controller/WeatherController.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/controller/WeatherController.java	(date 1741518598516)
@@ -1,3 +1,8 @@
+/*
+Användes innan vi kombinerade våra APIn (Flight & Väder), vi ansåg att det var smidigare att göra de kombinerat i en
+SearchController istället.
+ */
+/*
 package controller;
 
 import io.javalin.Javalin;
@@ -21,3 +26,5 @@
 
     }
 }
+
+ */
Index: src/service/dto/FlightResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/FlightResult.java b/src/model/dto/FlightResult.java
rename from src/service/dto/FlightResult.java
rename to src/model/dto/FlightResult.java
--- a/src/service/dto/FlightResult.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/FlightResult.java	(date 1741518938353)
@@ -1,4 +1,4 @@
-package service.dto;
+package model.dto;
 
 
 
Index: src/service/dto/FlightResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/FlightResponse.java b/src/model/dto/FlightResponse.java
rename from src/service/dto/FlightResponse.java
rename to src/model/dto/FlightResponse.java
--- a/src/service/dto/FlightResponse.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/FlightResponse.java	(date 1741518938063)
@@ -1,6 +1,8 @@
-package service.dto;
+package model.dto;
+/*
 
 
+ */
 import java.util.List;
 
 
Index: src/service/dto/Itinerary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/Itinerary.java b/src/model/dto/Itinerary.java
rename from src/service/dto/Itinerary.java
rename to src/model/dto/Itinerary.java
--- a/src/service/dto/Itinerary.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/Itinerary.java	(date 1741518938404)
@@ -1,4 +1,4 @@
-package service.dto;
+package model.dto;
 
 
 import java.util.List;
Index: src/frontend/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.d-block:hover{\r\n    filter: brightness(0.8);\r\n    transform: scale(1.05);\r\n    transition: all 0.3s ease;\r\n}\r\n.search-container {\r\n    background-color: white;\r\n    border-radius: 50px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n    padding: 10px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    transition: all 0.3s ease;\r\n}\r\n.form-control.search-input {\r\n    border: none;\r\n    background: transparent;\r\n    padding-left: 20px;\r\n    font-size: 1rem;\r\n    height: 50px;\r\n}\r\n.search-icon {\r\n    color: #6c757d;\r\n    position: absolute;\r\n    left: 15px;\r\n    top: 65%;\r\n    transform: translateY(-50%);\r\n}\r\n.search-container {\r\n    max-width: 400px; \r\n    flex-grow: 1;\r\n}\r\n.search-container .btn-search:hover {\r\n    background-color: #b5b5b5;\r\n    transition: background-color 0.5s ease;\r\n}\r\n.form-label {\r\n    font-weight: bold;\r\n    margin-bottom: 5px;\r\n    display: block;\r\n    text-align: center;\r\n}\r\n.date-pickers {\r\n    margin-top: 20px;\r\n}\r\n\r\n.date-picker-container {\r\n    position: relative;\r\n    margin-bottom: 20px;\r\n    flex: 1;\r\n    max-width: 300px;\r\n    background-color: white;\r\n    border-radius: 50px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n    padding: 20px;\r\n}\r\n.date-picker-container .dropdown {\r\n    position: absolute; \r\n    background-color: white;\r\n    border-radius: 50px;\r\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\r\n    padding: 10px;\r\n}\r\n.card-img-top{\r\n    height: 300px;\r\n    width: 100%;\r\n    object-fit: cover;\r\n}\r\n.card-img-top:hover {\r\n    filter: brightness(0.8);\r\n    transform: scale(1.05);\r\n    transition: all 0.3s ease;\r\n}\r\n.cards{\r\n    margin-top: 75px;\r\n}\r\n#search-flights {\r\n    display: block;\r\n    margin: 15px auto;\r\n    padding: 12px 24px;\r\n    font-size: 18px;\r\n    background-color: #b5b5b5;\r\n    border: none;\r\n    transition: background 0.3s ease-in-out;\r\n}\r\n\r\n#search-flights:hover {\r\n    background-color: #979797;\r\n}\r\n\r\n\r\n.weather-card {\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n}\r\n\r\n.weather-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 10px 15px rgba(0,0,0,0.1);\r\n}\r\n\r\n.search-field {\r\n  background-color: #f8f9fa;\r\n  padding: 2rem;\r\n  border-radius: 0.5rem;\r\n  box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);\r\n  margin-bottom: 2rem;\r\n  text-align: center;\r\n}\r\n.search-icon {\r\n  position: absolute;\r\n  left: 15px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  z-index: 10;\r\n}\r\n.search-input {\r\n  padding-left: 40px !important;\r\n}\r\n.flight-card {\r\n  transition: all 0.3s ease;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.flight-card:hover {\r\n  transform: scale(1.03);\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.15);\r\n  z-index: 10;\r\n}\r\n\r\n\r\n/* För attractions */\r\n\r\nbody {\r\n    font-family: 'Roboto', Arial, sans-serif;\r\n    margin: 20px;\r\n    background-color: #f8f9fa;\r\n    color: #333;\r\n    line-height: 1.6;\r\n}\r\n\r\nh1 {\r\n    color: #2c3e50;\r\n    font-size: 2.5rem;\r\n    margin-bottom: 0.5rem;\r\n    font-weight: 700;\r\n}\r\n\r\nh2 {\r\n    color: #3498db;\r\n    font-size: 1.8rem;\r\n    margin-bottom: 0.8rem;\r\n    font-weight: 600;\r\n}\r\n\r\np {\r\n    font-size: 1.1rem;\r\n    margin-bottom: 1.2rem;\r\n}\r\n\r\n.attraction-item {\r\n    margin-bottom: 25px;\r\n    padding: 20px;\r\n    border: 1px solid #e0e0e0;\r\n    border-radius: 10px;\r\n    background-color: white;\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n    transition: transform 0.2s, box-shadow 0.2s;\r\n}\r\n\r\n.attraction-item:hover {\r\n    transform: translateY(-5px);\r\n    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);\r\n}\r\n\r\n.attraction-image {\r\n    max-width: 100%;\r\n    height: auto;\r\n    margin-bottom: 15px;\r\n    border-radius: 5px;\r\n}\r\n\r\n.map-link {\r\n    color: #3498db;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n    display: inline-block;\r\n    padding: 5px 0;\r\n    border-bottom: 2px solid transparent;\r\n    transition: border-color 0.2s;\r\n}\r\n\r\n.map-link:hover {\r\n    border-bottom-color: #3498db;\r\n}\r\n\r\n.category {\r\n    display: inline-block;\r\n    background-color: #e9f7fe;\r\n    color: #3498db;\r\n    padding: 5px 10px;\r\n    margin-right: 8px;\r\n    margin-bottom: 10px;\r\n    border-radius: 5px;\r\n    font-size: 0.9rem;\r\n    font-weight: 500;\r\n}\r\n\r\n#loading {\r\n    font-size: 1.2rem;\r\n    text-align: center;\r\n    padding: 20px;\r\n}\r\n\r\n#error-message {\r\n    background-color: #ffe9e9;\r\n    color: #e74c3c;\r\n    padding: 15px;\r\n    border-radius: 5px;\r\n    font-weight: 500;\r\n    margin-bottom: 20px;\r\n}\r\n\r\na {\r\n    color: #3498db;\r\n    text-decoration: none;\r\n    font-weight: 500;\r\n}\r\n\r\na:hover {\r\n    text-decoration: underline;\r\n}\r\n\r\n.intro-text {\r\n    font-size: 1.3rem;\r\n    color: #555;\r\n    margin-bottom: 25px;\r\n}\r\n\r\n.section {\r\n    margin-bottom: 30px;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n}\r\n\r\n.method {\r\n    display: inline-block;\r\n    padding: 5px 10px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n}\r\n\r\n.get {\r\n    background-color: #3498db;\r\n}\r\n\r\n.endpoint {\r\n    font-family: monospace;\r\n    background-color: #f8f9fa;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    border: 1px solid #e9ecef;\r\n}\r\n\r\n.required {\r\n    color: #e74c3c;\r\n    font-weight: bold;\r\n}\r\n\r\n.optional {\r\n    color: #7f8c8d;\r\n}\r\n\r\n\r\n/* Stilar för API-dokumentation */\r\n.section {\r\n    margin-bottom: 30px;\r\n    padding: 20px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 8px;\r\n    background-color: #fff;\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.05);\r\n}\r\n\r\nh1 {\r\n    color: #2c3e50;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nh2 {\r\n    color: #3498db;\r\n    border-bottom: 2px solid #f0f0f0;\r\n    padding-bottom: 10px;\r\n    margin-bottom: 15px;\r\n}\r\n\r\nh3 {\r\n    color: #2c3e50;\r\n    margin-top: 20px;\r\n    margin-bottom: 15px;\r\n}\r\n\r\npre {\r\n    background-color: #f8f9fa;\r\n    padding: 15px;\r\n    border-radius: 5px;\r\n    overflow-x: auto;\r\n    border: 1px solid #e9ecef;\r\n}\r\n\r\ntable {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin-bottom: 20px;\r\n}\r\n\r\nth, td {\r\n    border: 1px solid #ddd;\r\n    padding: 12px;\r\n    text-align: left;\r\n}\r\n\r\nth {\r\n    background-color: #f2f2f2;\r\n    font-weight: 600;\r\n}\r\n\r\ntr:nth-child(even) {\r\n    background-color: #f8f9fa;\r\n}\r\n\r\n.method {\r\n    display: inline-block;\r\n    padding: 5px 10px;\r\n    border-radius: 4px;\r\n    color: white;\r\n    font-weight: bold;\r\n    margin-right: 10px;\r\n}\r\n\r\n.get {\r\n    background-color: #3498db;\r\n}\r\n\r\n.endpoint {\r\n    font-family: monospace;\r\n    background-color: #f8f9fa;\r\n    padding: 5px;\r\n    border-radius: 4px;\r\n    border: 1px solid #e9ecef;\r\n}\r\n\r\n.required {\r\n    color: #e74c3c;\r\n    font-weight: bold;\r\n}\r\n\r\n.optional {\r\n    color: #7f8c8d;\r\n}\r\n\r\nfooter {\r\n    margin-top: 40px;\r\n    padding-top: 20px;\r\n    border-top: 1px solid #ddd;\r\n    text-align: center;\r\n    color: #7f8c8d;\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/frontend/style.css b/src/frontend/style.css
--- a/src/frontend/style.css	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/frontend/style.css	(date 1741453291259)
@@ -3,6 +3,18 @@
     transform: scale(1.05);
     transition: all 0.3s ease;
 }
+
+.tillbakaKnapp{
+    display: inline-block;
+    background-color: #007bff;
+    color: white;
+    padding: 10px 20px;
+    border-radius: 5px;
+    text-decoration: none;
+    font-size: 16px;
+    font-weight: bold;
+    transition: background-color 0.3s,transform 0.2s;
+}
 .search-container {
     background-color: white;
     border-radius: 50px;
Index: src/service/dto/FlightSearchRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/service/dto/FlightSearchRequest.java b/src/model/dto/FlightSearchRequest.java
rename from src/service/dto/FlightSearchRequest.java
rename to src/model/dto/FlightSearchRequest.java
--- a/src/service/dto/FlightSearchRequest.java	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/src/model/dto/FlightSearchRequest.java	(date 1741518911493)
@@ -1,4 +1,4 @@
-package service.dto;
+package model.dto;
 
 import java.util.List;
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"29729ce9-8b97-4cdd-84b0-62151254a1cb\" name=\"Changes\" comment=\"nytt\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/jarRepositories.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/FlightSearchException.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/Main.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/Airline.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/Airport.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/Carriers.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/FlightResponse.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/FlightResult.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/FlightSearchRequest.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/Itinerary.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/Leg.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/service/dto/Segment.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/misc.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/misc.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/SkyExplorer.iml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/SkyExplorer.iml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/service/FlightService.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/service/FlightService.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Emil\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2r7CTMHtksTnwRU54HGnzjZNw3X\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;Mahyar1&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunAnythingCache\">\r\n    <option name=\"myCommands\">\r\n      <command value=\"mvn clean install\" />\r\n    </option>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.service.Main\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"SkyExplorer\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"service.Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"service.Main\" />\r\n      <module name=\"SkyExplorer\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"service.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.service.Main\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"29729ce9-8b97-4cdd-84b0-62151254a1cb\" name=\"Changes\" comment=\"\" />\r\n      <created>1735900736375</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1735900736375</updated>\r\n      <workItem from=\"1735900737422\" duration=\"610000\" />\r\n      <workItem from=\"1740317507227\" duration=\"828000\" />\r\n    </task>\r\n    <task id=\"LOCAL−00001\" summary=\"nytt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735900804345</created>\r\n      <option name=\"number\" value=\"LOCAL−00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00001\" />\r\n      <updated>1735900804345</updated>\r\n    </task>\r\n    <task id=\"LOCAL−00002\" summary=\"nytt\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735900931883</created>\r\n      <option name=\"number\" value=\"LOCAL−00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL−00002\" />\r\n      <updated>1735900931883</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"3\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"nytt\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"nytt\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision e312f6a3768b2645ecb2b3e18a0153bd6a19c9a7)
+++ b/.idea/workspace.xml	(date 1741519047850)
@@ -5,25 +5,50 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="29729ce9-8b97-4cdd-84b0-62151254a1cb" name="Changes" comment="nytt">
-      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/FlightSearchException.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/Main.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/Airline.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/Airport.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/Carriers.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/FlightResponse.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/FlightResult.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/FlightSearchRequest.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/Itinerary.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/Leg.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/service/dto/Segment.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/SkyExplorer.iml" beforeDir="false" afterPath="$PROJECT_DIR$/SkyExplorer.iml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/controller/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controller/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/controller/SearchController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controller/SearchController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/controller/WeatherController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/controller/WeatherController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/frontend/flight-script.js" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/frontend/flights.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/frontend/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/src/frontend/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/frontend/views/api-docs.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/frontend/views/api-docs.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/frontend/views/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/src/frontend/views/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/misc/Configurator.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/misc/Configurator.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/model/Flight.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/model/Place.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/model/Weather.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/AttractionService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/service/AttractionService.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/service/FlightService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/service/FlightService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/WeatherService.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/service/WeatherService.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/Airline.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/Airline.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/Airport.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/Airport.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/Attraction.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/Attraction.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/Carriers.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/Carriers.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/FlightResponse.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/FlightResponse.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/FlightResult.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/FlightResult.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/FlightSearchRequest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/FlightSearchRequest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/Itinerary.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/Itinerary.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/service/dto/Leg.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/model/dto/Leg.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/SkyExplorer-1.1.0.jar" beforeDir="false" afterPath="$PROJECT_DIR$/target/SkyExplorer-1.1.0.jar" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/controller/App.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/controller/App.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/controller/SearchController.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/controller/SearchController.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/controller/WeatherController.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/frontend/flight-script.js" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/frontend/flights.json" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/frontend/style.css" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/frontend/style.css" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/frontend/views/api-docs.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/frontend/views/api-docs.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/frontend/views/attractions.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/frontend/views/attractions.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/frontend/views/index.html" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/frontend/views/index.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/misc/Configurator.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/misc/Configurator.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/model/Flight.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/model/Place.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/model/Weather.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/service/AttractionService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/service/AttractionService.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/service/FlightService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/service/FlightService.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/service/WeatherService.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/service/WeatherService.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/service/dto/FlightResponse$FlightData.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/service/dto/FlightResponse$FlightData.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/service/dto/FlightResponse.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/service/dto/FlightResponse.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -56,10 +81,14 @@
   </component>
   <component name="PropertiesComponent">{
   &quot;keyToString&quot;: {
+    &quot;Application.App.executor&quot;: &quot;Run&quot;,
+    &quot;Application.service.Main.executor&quot;: &quot;Run&quot;,
+    &quot;JavaScript Debug.index.html.executor&quot;: &quot;Run&quot;,
+    &quot;Maven.SkyExplorer [clean,install].executor&quot;: &quot;Run&quot;,
     &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
     &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
     &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;Mahyar1&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;Test-Branch&quot;,
     &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
     &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
@@ -74,7 +103,7 @@
       <command value="mvn clean install" />
     </option>
   </component>
-  <component name="RunManager" selected="Application.service.Main">
+  <component name="RunManager">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Main" />
       <module name="SkyExplorer" />
